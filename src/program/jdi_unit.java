package program;

import DBcontrol.Db_unit;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

public class jdi_unit extends javax.swing.JDialog {
    DefaultTableModel model;    
    private String[] unitData = null;
    
    /** Creates new form jdi_unit */
    public jdi_unit(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        model = (DefaultTableModel) tblUnit.getModel();
        tblUnit.setShowGrid(true);
        tblUnit.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblUnit.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblUnit.setRowSelectionAllowed(true);
        tblUnit.setShowGrid(true);
        tblUnit.setGridColor(Color.gray);

        tblUnit.getColumnModel().getColumn(0).setPreferredWidth(70);
        tblUnit.getColumnModel().getColumn(1).setPreferredWidth(212);
        JTableHeader header = tblUnit.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 16));
        tblUnit.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblUnit.setRowHeight(25);
        displayUnitForm();

    }

    private void displayUnitForm() {
        Db_unit unit = new Db_unit();
        List list = unit.getUnitData();
        int sizeList = list.size();
        String[] line = new String[sizeList];

        for (int i = 0; i < sizeList; i++) {
            String[] data = {" " + (i + 1) + "", list.get(i).toString()};
            model.addRow(data);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUnit = new javax.swing.JTable();
        bnt_remove1 = new javax.swing.JButton();
        btn_saveExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("หน่วยสินค้า");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(216, 208, 222));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblUnit.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblUnit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tblUnit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ที่", "หน่วยนับ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUnit.setRowHeight(20);
        tblUnit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUnitMouseClicked(evt);
            }
        });
        tblUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblUnitKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblUnit);
        if (tblUnit.getColumnModel().getColumnCount() > 0) {
            tblUnit.getColumnModel().getColumn(0).setResizable(false);
        }

        bnt_remove1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        bnt_remove1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.gif"))); // NOI18N
        bnt_remove1.setText("ลบ");
        bnt_remove1.setToolTipText("ลบ");
        bnt_remove1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bnt_remove1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_remove1ActionPerformed(evt);
            }
        });

        btn_saveExit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btn_saveExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.gif"))); // NOI18N
        btn_saveExit.setText("บันทึก-ออก");
        btn_saveExit.setToolTipText("บันทึก-ออก");
        btn_saveExit.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_saveExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bnt_remove1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_saveExit, javax.swing.GroupLayout.PREFERRED_SIZE, 106, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(bnt_remove1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_saveExit)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(414, 391));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void bnt_remove1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_remove1ActionPerformed
// TODO add your handling code here:
    int rowEdit = tblUnit.getEditingRow();
    if (rowEdit > -1) {
        tblUnit.getCellEditor().stopCellEditing();
    }
    if (model.getRowCount() == 1) {
    } else {
        if (tblUnit.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "ไม่มีข้อมูลที่เลือกกรุณาตรวจสอบข้อมูล", "Mycps", JOptionPane.OK_OPTION);
        } else {
            String unitSelect = model.getValueAt(tblUnit.getSelectedRow(), 1).toString();
            if (unitSelect.trim().equals("")) {
                model.removeRow(tblUnit.getSelectedRow());
            } else {
                Db_unit unit = new Db_unit();
                if (unit.checkRemoveUnit(unitSelect)) {
                    JOptionPane.showMessageDialog(this, "ไม่สามารถลบข้อมูลนี้ได้เนื่องจากมีการนำไปใช้งานแล้ว", "Mycps", JOptionPane.ERROR_MESSAGE);
                } else {
                    int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        model.removeRow(tblUnit.getSelectedRow());
                    }
                }
            }
        }
    }

}//GEN-LAST:event_bnt_remove1ActionPerformed

private void btn_saveExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveExitActionPerformed
// TODO add your handling code here:

    int rowCount = model.getRowCount();
    int rowSelect = tblUnit.getEditingRow();
    if (rowSelect > -1) {
        tblUnit.getCellEditor().stopCellEditing();

    }
    String valueAdd = "";
    boolean validate = false;
    unitData = new String[rowCount];
    for (int i = 0; i < rowCount; i++) {
        valueAdd = model.getValueAt(i, 1).toString();
        if (valueAdd.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "ท่านยังไม่ได้ระบุหน่วยนับ กรุณาตรวจสอบข้อมูล", "Mycps", JOptionPane.ERROR_MESSAGE);
            tblUnit.setRowSelectionInterval(0, i);
            tblUnit.scrollRectToVisible(tblUnit.getCellRect(i, 0, true));
            break;
        } else {
            unitData[i] = valueAdd;
            if (i == rowCount - 1) {
                validate = true;
            }
        }
    }
    if (validate) {
        Db_unit unit = new Db_unit();
        if (unit.insert(unitData)) {
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, " เกิดความผิดพลาดของระบบ ไม่สามารถเพิ่มข้อมูลได้", "Mycps", JOptionPane.ERROR_MESSAGE);
        }
    }

}//GEN-LAST:event_btn_saveExitActionPerformed

private void tblUnitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblUnitKeyReleased
// TODO add your handling code here:
    int rowCount = model.getRowCount();
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        dispose();
    }
    if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
        int select = tblUnit.getSelectedRow();
        String lastRow = model.getValueAt(rowCount - 1, 1).toString();
        if (lastRow.trim().equals("")) {
            tblUnit.clearSelection();
            tblUnit.setRowSelectionInterval(0, rowCount - 1);
        } else if (select == rowCount - 1) {
            String num = model.getValueAt(select, 0).toString();
            Integer row = Integer.parseInt(num.trim()) + 1;
            String[] data = {" " + (row) + "", ""};
            model.addRow(data);
            tblUnit.clearSelection();
            tblUnit.setRowSelectionInterval(0, rowCount);
        }    
    }
}//GEN-LAST:event_tblUnitKeyReleased

private void tblUnitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUnitMouseClicked
// TODO add your handling code here:
   
}//GEN-LAST:event_tblUnitMouseClicked
    public  String[] getValueUnit() {
      
        return unitData;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                jdi_unit dialog = new jdi_unit(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnt_remove1;
    private javax.swing.JButton btn_saveExit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUnit;
    // End of variables declaration//GEN-END:variables
}
