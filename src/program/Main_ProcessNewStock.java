package program;

import DBcontrol.Db_stockfile;
import DBcontrol.MySQLConnect;
import Bean.Stockfile;
import Main.browser.Jdi_browse_stockfile;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import javax.swing.JOptionPane;
import utilities.DateChooser.DateChooserDialog;
import utilities.NimbusFrame;
import utilities.date_time.DateUtilities;

public class Main_ProcessNewStock extends javax.swing.JDialog {

    String user = PublicVar.TempUser.UserCode;
    SimpleDateFormat dateFmtShow = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat MYFmtShow = new SimpleDateFormat("MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat timeFmtShow = new SimpleDateFormat("HH:mm:ss", Locale.ENGLISH);
    SimpleDateFormat Sqldate = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    SimpleDateFormat YearFmt = new SimpleDateFormat("yyyy", Locale.ENGLISH);
    SimpleDateFormat MonthFmt = new SimpleDateFormat("MM", Locale.ENGLISH);
    DecimalFormat doubleFmt = new DecimalFormat("##,###,##0.00");
    DecimalFormat qtyFmt = new DecimalFormat("##,###,##0.000");
    DecimalFormat YearToStr = new DecimalFormat("#####");
    DecimalFormat DecFmt = new DecimalFormat("#########0.00");
    DecimalFormat IntFmt = new DecimalFormat("#######0");
    DecimalFormat LineFmt = new DecimalFormat("###0");
    String TempYear1 = "";
    String TempYear2 = "";
    String TempStk = "";
    Boolean ProcessStop;

    /** Creates new form Main_ProcessNewStock */
    public Main_ProcessNewStock(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        LoadVariable();
    }

    public void LoadVariable() {
        VarPanal.setEnabled(true);
        Date TempActDate = new Date();
        TMonth.setText(MYFmtShow.format(TempActDate));
        try {
            Statement stmt = (Statement) MySQLConnect.con.createStatement();
            String SqlQuery = "select *from company";
            ResultSet rec = stmt.executeQuery(SqlQuery);
            rec.first();
            if (rec.getRow() == 0) {
                JOptionPane.showMessageDialog(this, "กรุณาตรวจสอบไฟล์ข้อมูลบริษัท...");
                return;
            } else {
                TempStk = rec.getString("posstock");
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        TStk.setText(TempStk);
        txtStockEvent();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VarPanal = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TMonth = new javax.swing.JFormattedTextField();
        cmdDateChoose1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        TStk = new javax.swing.JTextField();
        cmd1 = new javax.swing.JButton();
        StkName = new javax.swing.JLabel();
        StkProcess = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        bntOK = new javax.swing.JButton();
        bntExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("คำนวณยอดคงเหลือยกมา");
        setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        VarPanal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel1.setText("คำนวณยอดสินค้าต้นงวดสำหรับเดือน");

        TMonth.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/yyyy"))));
        TMonth.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        TMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TMonthKeyPressed(evt);
            }
        });

        cmdDateChoose1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar.png"))); // NOI18N
        cmdDateChoose1.setFocusable(false);
        cmdDateChoose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateChoose1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(TMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdDateChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(TMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmdDateChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "สำหรับคลัง", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 1, 14))); // NOI18N

        TStk.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        TStk.setText("jTextField1");
        TStk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TStkKeyPressed(evt);
            }
        });

        cmd1.setBackground(java.awt.Color.white);
        cmd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmd1.setFocusable(false);
        cmd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd1ActionPerformed(evt);
            }
        });

        StkName.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        StkName.setText("สำหรับคลังสินค้า");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TStk, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmd1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StkName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(StkName)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cmd1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TStk, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        //cmdSearchDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/magnifying glass.jpg")));

        StkProcess.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        StkProcess.setForeground(new java.awt.Color(241, 25, 14));
        StkProcess.setText("StockProcess");

        javax.swing.GroupLayout VarPanalLayout = new javax.swing.GroupLayout(VarPanal);
        VarPanal.setLayout(VarPanalLayout);
        VarPanalLayout.setHorizontalGroup(
            VarPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VarPanalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VarPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VarPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(VarPanalLayout.createSequentialGroup()
                        .addComponent(StkProcess, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                        .addGap(212, 212, 212)))
                .addContainerGap())
        );
        VarPanalLayout.setVerticalGroup(
            VarPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VarPanalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(StkProcess)
                .addGap(39, 39, 39))
        );

        jPanel4.setBackground(new java.awt.Color(204, 17, 35));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(15, 73, 18), 5, true));

        jLabel2.setFont(new java.awt.Font("Norasi", 1, 28)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("โปรแกรมประมวลสินค้าต้นงวดใหม่");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        TextArea.setColumns(20);
        TextArea.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        TextArea.setRows(5);
        TextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        TextArea.setFocusable(false);
        TextArea.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(TextArea);

        bntOK.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        bntOK.setText("ตกลง (OK)");
        bntOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntOKActionPerformed(evt);
            }
        });

        bntExit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        bntExit.setText("ออก (Exit)");
        bntExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(VarPanal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bntOK, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(bntOK, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(VarPanal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1024, 768));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void cmdDateChoose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateChoose1ActionPerformed
    cmdDateChoose1();
}//GEN-LAST:event_cmdDateChoose1ActionPerformed

private void cmd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd1ActionPerformed
    searchStkF1Dialog();
    txtStockEvent();
}//GEN-LAST:event_cmd1ActionPerformed

private void bntExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExitActionPerformed
// TODO add your handling code here:
    bntExitClick();
}//GEN-LAST:event_bntExitActionPerformed

private void TStkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TStkKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtStockEvent();
        TMonth.requestFocus();
    }

}//GEN-LAST:event_TStkKeyPressed

private void bntOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntOKActionPerformed
// TODO add your handling code here:
    bntOKClick();
}//GEN-LAST:event_bntOKActionPerformed

private void TMonthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TMonthKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        TStk.requestFocus();
    }
}//GEN-LAST:event_TMonthKeyPressed
public void bntExitClick() {
    this.dispose();
}
public void bntOKClick() {
    try {
        Db_stockfile db = new Db_stockfile();
        String text = TStk.getText().trim();
        if (!db.seek(text)) {
            JOptionPane.showMessageDialog(this, "กรุณาใส่รหัสคลังสินค้าให้ถูกต้อง");
            TStk.requestFocus();
            return;
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "กรุณาใส่รหัสคลังสินค้าให้ถูกต้อง");
        TStk.requestFocus();
        return;
    }
    NewStock() ;
}
public void NewStock() {
    Thread SendData = new Thread(new ProcessSend());
        SendData.start();
}
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main_ProcessNewStock dialog = new Main_ProcessNewStock(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel StkName;
    private javax.swing.JLabel StkProcess;
    private javax.swing.JFormattedTextField TMonth;
    private javax.swing.JTextField TStk;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JPanel VarPanal;
    private javax.swing.JButton bntExit;
    private javax.swing.JButton bntOK;
    private javax.swing.JButton cmd1;
    private javax.swing.JButton cmdDateChoose1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
 
     private boolean searchStkF1Dialog(){
        Jdi_browse_stockfile rsd = new Jdi_browse_stockfile(new NimbusFrame(),true);
        rsd.setLocation(cmd1.getLocationOnScreen());
        rsd.setVisible(true);
        Stockfile hrb = rsd.getDataRecord();
        if (hrb != null) {
            TStk.setText(hrb.getStkcode());
            StkName.setText(hrb.getStkname());
            return true;
        }else{
            TStk.requestFocus();
            return false;
        }
    }
     private void txtStockEvent() {
        if (TStk.getText().trim().equals("") || TStk.getText() == null) {
            TStk.requestFocus();
        } else {
            boolean b = false;
            try {
                Db_stockfile db = new Db_stockfile();
                
                if(!db.seek(TStk.getText().trim())){
                    b = false;
                }else {
                    Stockfile row = db.getRecordAt(TStk.getText().trim());
                    TStk.setText(row.getStkcode());
                    StkName.setText(row.getStkname());
                    b = true;
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                b = false;
            }
            if (b) {
            } else {
                TStk.requestFocus();
                TStk.selectAll();
            }
        }
        
    }
     private void cmdDateChoose1(){
        Point point = cmdDateChoose1.getLocationOnScreen();
        DateChooserDialog dcd = new DateChooserDialog(null,true,point);
        dcd.setVisible(true);
        TMonth.setText(MYFmtShow.format(dcd.getSelectedDate().getTime()));
    }
     
     class ProcessSend extends javax.swing.JDialog implements Runnable {

        public void run() {
            TextArea.selectAll();
            TextArea.cut();
            TextArea.setForeground(Color.BLACK);
            TextArea.append("********** Start Process **********\n");
            ProcessNewStock();
            TextArea.append("********* End of Process *********\n");
            bntOK.setEnabled(true);
            bntExit.setEnabled(true);

        }
        public int GetActMonth(Date TempDate) {
            int ReturnVal = 0;
            Date Acterm = new Date();
            try {
                Statement stmt = (Statement) MySQLConnect.con.createStatement();
                String SqlQuery = "select *from company ";
                ResultSet rec = stmt.executeQuery(SqlQuery);
                rec.first();
                if (rec.getRow() == 0) {
                } else {
                    Acterm = rec.getDate("accterm");
                    int ActermYear = Integer.parseInt(Sqldate.format(Acterm).substring(0, 4));
                    int TempDateYear = Integer.parseInt(Sqldate.format(TempDate).substring(0, 4));
                    if (ActermYear == TempDateYear) {
                        ReturnVal = Integer.parseInt(Sqldate.format(TempDate).substring(5, 7)) + 12;
                    } else {
                        if (ActermYear == TempDateYear + 1) {
                            ReturnVal = Integer.parseInt(Sqldate.format(TempDate).substring(5, 7));
                        } else {
                            ReturnVal = 0;
                        }
                    }
                }
                rec.close();
                stmt.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            return ReturnVal;
        }
        public void ProcessNewStock() {
            SimpleDateFormat DateFmtM = new SimpleDateFormat("MM/yyyy", Locale.ENGLISH);
            double Sum1, Sum2, Sum3, SumAmt1, SumAmt2, SumAmt3 = 0.0;
            String TempStrDate = "01/" +TMonth.getText();
            Date TempDate = new Date();
            Date TempDate2 = new Date() ;
            try {
                TempDate = dateFmtShow.parse(TempStrDate);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "ป้อนงวดเดือนไม่ถูต้อง...");
                return ;
                //Logger.getLogger(Main_ProcessNameStock.class.getName()).log(Level.SEVERE, null, ex);
            }
            String Month = TMonth.getText().substring(0,2) ;
            String Year = TMonth.getText().substring(3,7) ;
            int XMonth = Integer.parseInt(Month) ; 
            int XYear = Integer.parseInt(Year) ;
            if (XMonth==1) {
                XMonth = 12 ;
                XYear = XYear-1 ;
            } else {
                XMonth=XMonth-1 ;
            }
            TempStrDate = "01/"+PUtility.Addzero(IntFmt.format(XMonth), 2)+"/"+PUtility.Addzero(IntFmt.format(XYear), 4) ;
            try {
                TempDate = dateFmtShow.parse(TempStrDate);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "ป้อนงวดเดือนไม่ถูต้อง...");
                return ;
                //Logger.getLogger(Main_ProcessNameStock.class.getName()).log(Level.SEVERE, null, ex);
            }
            Calendar cal = PUtility.StrToCalendar(TempStrDate);
            cal.set(Calendar.DAY_OF_MONTH, DateUtilities.getMaxDay( (GregorianCalendar) cal ));
            TempStrDate = dateFmtShow.format(cal.getTime());
            try {
                TempDate2 = dateFmtShow.parse(TempStrDate);
            } catch (ParseException ex) {
                //Logger.getLogger(Main_ProcessNameStock.class.getName()).log(Level.SEVERE, null, ex);
            }
            int TempAct = GetActMonth(TempDate) - 1;
            int TempAct2 = GetActMonth(TempDate) ;
            String TempFieldName = "bqty" + IntFmt.format(TempAct).trim();
            String TempFieldName2 = "bqty" + IntFmt.format(TempAct2).trim();

            int TotalRec = 0;
            int CurRec = 0;
            int cntdif = 0 ;
            //TextWrite.writeToText(TempFile, PrintMsg) ;

            try {
                Statement stmt = (Statement) MySQLConnect.con.createStatement();
                String SqlQuery = "select pcode,pgroup,pdesc,pprice11 from product " +
                        "where pstock='Y' and pactive='Y'";
                ResultSet rec = stmt.executeQuery(SqlQuery);
                rec.first();
                if (rec.getRow() == 0) {
                } else {
                    do {
                        TotalRec++;
                    } while (rec.next());
                }
                rec.first();
                if (rec.getRow() == 0) {
                } else {
                    do {
                        CurRec++;
                        StkProcess.setText("รายการที่ " + IntFmt.format(CurRec) + "/" + IntFmt.format(TotalRec));
                        String TempCode = rec.getString("pcode");
                        String TempName = rec.getString("pdesc");
                        String TempDept = rec.getString("pgroup");
                        double TempPrice = rec.getDouble("pprice11");
                        double TBOM = 0.0;
                        double TBUY = 0.0;
                        double TREC = 0.0;
                        double TTRI = 0.0;
                        double TTRO = 0.0;
                        double TLOS = 0.0;
                        double TFRE = 0.0;
                        double TRET = 0.0;
                        double TSAL = 0.0;
                        double TADJ = 0.0;
                        double TEOM = 0.0;
                        double TempEOM = 0.0 ;
                        double TempDif = 0.0 ;
                        double CON_A = 0.0;
                        double CON_D = 0.0;
                        String TUser = "";
                        String TRem = "";
                        try {
                            Statement stmt2 = (Statement) MySQLConnect.con.createStatement();
                            String SqlQuery2 = "select *from stkfile  " +
                                    "where  bpcode ='" + TempCode + "' and bstk='" + TStk.getText() + "'";
                            ResultSet rec2 = stmt2.executeQuery(SqlQuery2);
                            rec2.first();
                            if (rec2.getRow() == 0) {
                            } else {
                                //TempFieldName = "bqty" + IntFmt.format(TempAct).trim();
                                TBOM = rec2.getDouble(TempFieldName);
                                TempEOM = rec2.getDouble(TempFieldName2) ;
                            }
                            rec2.close();
                            stmt2.close();
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(this, e.getMessage());
                        }
                        try {
                            Statement stmt3 = (Statement) MySQLConnect.con.createStatement();
                            String SqlQuery3 = "select s_pcode,s_stk,sum(s_in),sum(s_out) from stcard  " +
                                    "where  s_pcode ='" + TempCode + "' and s_stk='" + TStk.getText() + "' and s_date>='" + Sqldate.format(TempDate) + "' and s_date<='" + Sqldate.format(TempDate2) + "' " +
                                    "group by s_stk";
                            ResultSet rec3 = stmt3.executeQuery(SqlQuery3);
                            rec3.first();
                            if (rec3.getRow() == 0) {
                            } else {
                                TBOM = TBOM + rec3.getDouble("sum(s_in)") - rec3.getDouble("sum(s_out)");
                            }
                            rec3.close();
                            stmt3.close();
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(this, e.getMessage());
                        }

                        try {
                            Statement stmt4 = (Statement) MySQLConnect.con.createStatement();
                            String SqlQuery4 = "select s_pcode,s_stk,s_rem,sum(s_in),sum(s_out),s_user from stcard  " +
                                    "where  s_pcode ='" + TempCode + "' and s_stk='" + TStk.getText() + "' " +
                                    "and s_date>='" + Sqldate.format(TempDate) + "' and s_date<='" + Sqldate.format(TempDate2) + "' " +
                                    "group by s_pcode,s_rem";
                            ResultSet rec4 = stmt4.executeQuery(SqlQuery4);
                            rec4.first();
                            if (rec4.getRow() == 0) {
                            } else {
                                do {
                                    if (rec4.getString("s_rem").equals("BUY")) {
                                        TBUY = rec4.getDouble("sum(s_in)");
                                    } else if (rec4.getString("s_rem").equals("REC")) {
                                        TREC = rec4.getDouble("sum(s_in)");
                                    } else if (rec4.getString("s_rem").equals("TRI")) {
                                        TTRI = rec4.getDouble("sum(s_in)");
                                    } else if (rec4.getString("s_rem").equals("TRO")) {
                                        TTRO = rec4.getDouble("sum(s_out)");
                                    } else if (rec4.getString("s_rem").equals("LOS")) {
                                        TLOS = rec4.getDouble("sum(s_out)");
                                    } else if (rec4.getString("s_rem").equals("FRE")) {
                                        TFRE = rec4.getDouble("sum(s_out)");
                                    } else if (rec4.getString("s_rem").equals("SAL")) {
                                        TSAL = rec4.getDouble("sum(s_out)");
                                    } else if (rec4.getString("s_rem").equals("ADJ")) {
                                        TADJ = rec4.getDouble("sum(s_out)") + rec4.getDouble("sum(s_in)");
                                    } else if (rec4.getString("s_rem").equals("CON+")) {
                                        CON_A = rec4.getDouble("sum(s_in)");
                                    } else if (rec4.getString("s_rem").equals("CON-")) {
                                        CON_D = rec4.getDouble("sum(s_out)");
                                    }
                                } while (rec4.next());
                            }
                            rec4.close();
                            stmt4.close();
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(this, e.getMessage());
                        }
                        TEOM = TBOM+TADJ+TBUY+TREC+TTRI-TTRO-TLOS-TFRE-TSAL+CON_A-CON_D ;
                        TempDif = TEOM-TempEOM ;
                        if (TempDif != 0) {
                            cntdif++ ;
                            TextArea.append(LineFmt.format(cntdif)+" รหัสสินค้า "+TempCode+" "+TempName+" ปรับยอด :"+IntFmt.format(TempDif)+"\n");
                            //Update StkFile ;
                            if (!SeekStkFile(TempCode, TStk.getText())) {
                                Statement stmt4 = (Statement) MySQLConnect.con.createStatement();
                                String InsertQuery4 = "insert into stkfile (bpcode,bstk) values (?,?)";
                                PreparedStatement prm4 = (PreparedStatement) MySQLConnect.con.prepareStatement(InsertQuery4);
                                prm4.setString(1, TempCode);
                                prm4.setString(2, TStk.getText());
                                prm4.executeUpdate();
                                stmt4.close();
                            }
                            for (int i = TempAct; i <= 24; i++) {
                                String T_Mon = "bqty" + String.valueOf(i);
                                Statement stmt4 = (Statement) MySQLConnect.con.createStatement();
                                String InsertQuery4 = "update stkfile set " + T_Mon + "=" + T_Mon + "+? where (bpcode=?) and (bstk=?)";
                                PreparedStatement prm4 = (PreparedStatement) MySQLConnect.con.prepareStatement(InsertQuery4);
                                prm4.setDouble(1, TempDif);
                                prm4.setString(2, TempCode);
                                prm4.setString(3, TStk.getText());
                                prm4.executeUpdate();
                                stmt4.close();
                            }
                        }
                    } while (rec.next());
                }
                rec.close();
                stmt.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            StkProcess.setText("");
        }
     }
     public Boolean SeekStkFile(String TempCode, String T_Stk) {
        Boolean RetVal = false;
        try {
            Statement stmt = (Statement) MySQLConnect.con.createStatement();
            String LoadTableFile = "select *from stkfile " +
                    "where (bpcode='" + TempCode + "') and (bstk='" + T_Stk + "') ";
            ResultSet rec = stmt.executeQuery(LoadTableFile);
            rec.first();
            if (rec.getRow() == 0) {
                RetVal = false;
            } else {
                RetVal = true;
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return RetVal;

    }
}
