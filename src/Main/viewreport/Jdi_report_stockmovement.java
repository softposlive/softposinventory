package Main.viewreport;

import utilities.FilterNameToMYSQL;
import Main.browser.Jdi_browse_stockfile;
import DBcontrol.MySQLConnect;
import program.PUtility;
import Main.browser.jdi_showgroupfile;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import report.SnpReport;
import utilities.NimbusFrame;

public class Jdi_report_stockmovement extends javax.swing.JDialog {

    SimpleDateFormat DateFmt = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat timeFmtShow = new SimpleDateFormat("hh:mm:ss", Locale.ENGLISH);
    SimpleDateFormat DateTimeFmt = new SimpleDateFormat("dd/MM/yyyy (HH:mm)", Locale.ENGLISH);
    SimpleDateFormat SqlDateFmt = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    SimpleDateFormat TimeFmt = new SimpleDateFormat("HH:mm", Locale.ENGLISH);
    SimpleDateFormat FileDateFmt = new SimpleDateFormat("yyyyMMdd", Locale.ENGLISH);
    SimpleDateFormat FullTimeFmt = new SimpleDateFormat("HH:mm:ss", Locale.ENGLISH);
    SimpleDateFormat ShortTimeFmt = new SimpleDateFormat("HH:mm", Locale.ENGLISH);
    DecimalFormat DecFmt = new DecimalFormat("#########0.00");
    DecimalFormat IntFmt = new DecimalFormat("#######0");
    Date date = new Date();
    Double AQty = 0.0;
    Double AAmt = 0.0;
    Double BAmt = 0.0;
    Double BQty = 0.0;
    SnpReport report;

    /** Creates new form Jdi_report_stockcard */
    public Jdi_report_stockmovement(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTable();
        model = (DefaultTableModel) tblTempmove.getModel();

        txt1.setText(DateFmt.format(date));
        txt2.setText(DateFmt.format(date));

        report = new SnpReport();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblMonth = new javax.swing.JLabel();
        cmdDateChoose2 = new javax.swing.JButton();
        txt2 = new javax.swing.JFormattedTextField();
        cmdDateChoose1 = new javax.swing.JButton();
        txt1 = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        txtPcode1 = new javax.swing.JTextField();
        cmdPcode1 = new javax.swing.JButton();
        txtPcode2 = new javax.swing.JTextField();
        cmdPcode2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtGroupFile1 = new javax.swing.JTextField();
        cmdGroup1 = new javax.swing.JButton();
        txtGroupFile2 = new javax.swing.JTextField();
        cmdGroup2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        txtStockFile = new javax.swing.JTextField();
        cmdStock = new javax.swing.JButton();
        lbStockFile = new javax.swing.JLabel();
        cmdProcess = new javax.swing.JButton();
        txtRowCount = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        cmdPrint = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        SumX1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        SumX2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        SumX3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTempmove = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("รายงานความเคลื่อนไหวสินค้า (Stock Movement)");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "กำหนดงวดเดือน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        lblMonth.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        cmdDateChoose2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        cmdDateChoose2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar.png"))); // NOI18N
        cmdDateChoose2.setFocusable(false);
        cmdDateChoose2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateChoose2ActionPerformed(evt);
            }
        });
        cmdDateChoose2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmdDateChoose2FocusGained(evt);
            }
        });
        cmdDateChoose2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmdDateChoose2KeyPressed(evt);
            }
        });

        txt2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt2FocusGained(evt);
            }
        });
        txt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt2KeyReleased(evt);
            }
        });

        cmdDateChoose1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar.png"))); // NOI18N
        cmdDateChoose1.setFocusable(false);
        cmdDateChoose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateChoose1ActionPerformed(evt);
            }
        });
        cmdDateChoose1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmdDateChoose1KeyPressed(evt);
            }
        });

        txt1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt1FocusGained(evt);
            }
        });
        txt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdDateChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdDateChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdDateChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdDateChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "กำหนดช่วงรหัสสินค้า", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        txtPcode1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPcode1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPcode1FocusGained(evt);
            }
        });
        txtPcode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPcode1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPcode1KeyReleased(evt);
            }
        });

        cmdPcode1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdPcode1.setFocusable(false);
        cmdPcode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPcode1ActionPerformed(evt);
            }
        });

        txtPcode2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPcode2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPcode2FocusGained(evt);
            }
        });
        txtPcode2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPcode2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPcode2KeyReleased(evt);
            }
        });

        cmdPcode2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdPcode2.setFocusable(false);
        cmdPcode2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPcode2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtPcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cmdPcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtPcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cmdPcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cmdPcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cmdPcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "กำหนดช่วงแผนก", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        txtGroupFile1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtGroupFile1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGroupFile1FocusGained(evt);
            }
        });
        txtGroupFile1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGroupFile1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGroupFile1KeyReleased(evt);
            }
        });

        cmdGroup1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdGroup1.setFocusable(false);
        cmdGroup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGroup1ActionPerformed(evt);
            }
        });

        txtGroupFile2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtGroupFile2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGroupFile2FocusGained(evt);
            }
        });
        txtGroupFile2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGroupFile2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGroupFile2KeyReleased(evt);
            }
        });

        cmdGroup2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdGroup2.setFocusable(false);
        cmdGroup2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGroup2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtGroupFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGroupFile2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdGroup2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cmdGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGroupFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdGroup2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGroupFile2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "กำหนดสต็อก", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        txtStockFile.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtStockFile.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtStockFile.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtStockFileFocusGained(evt);
            }
        });
        txtStockFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStockFileKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStockFileKeyReleased(evt);
            }
        });

        cmdStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdStock.setFocusable(false);
        cmdStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStockActionPerformed(evt);
            }
        });

        lbStockFile.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtStockFile, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmdStock, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbStockFile, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbStockFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdStock, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStockFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cmdProcess.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        cmdProcess.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/SandClock.png"))); // NOI18N
        cmdProcess.setText("F5-ประมวณผล");
        cmdProcess.setFocusable(false);
        cmdProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProcessActionPerformed(evt);
            }
        });
        cmdProcess.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmdProcessKeyPressed(evt);
            }
        });

        txtRowCount.setBackground(new java.awt.Color(253, 222, 190));
        txtRowCount.setEditable(false);
        txtRowCount.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtRowCount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRowCount.setText("จำนวนรายการ : ");
        txtRowCount.setFocusable(false);

        jButton1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.gif"))); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtRowCount)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmdProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRowCount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setFocusable(false);
        jTabbedPane1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jTabbedPane1.setRequestFocusEnabled(false);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cmdPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        cmdPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print.gif"))); // NOI18N
        cmdPrint.setText("พิมพ์");
        cmdPrint.setFocusable(false);
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel1.setText("จำนวนรายการขาด");

        SumX1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        SumX1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SumX1.setFocusable(false);
        SumX1.setRequestFocusEnabled(false);

        jLabel2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel2.setText("จำนวนรายการเกิน");

        SumX2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        SumX2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SumX2.setFocusable(false);
        SumX2.setRequestFocusEnabled(false);

        jLabel3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel3.setText("จำนวนสินค้าที่ไม่มีขาด-เกิน");

        SumX3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        SumX3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SumX3.setFocusable(false);
        SumX3.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SumX1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SumX2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(0, 0, 0)
                .addComponent(SumX3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmdPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SumX1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SumX2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(SumX3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        tblTempmove.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tblTempmove.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        tblTempmove.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "แผนก", "รหัสสินค้า (PLU Code)", "ชื่อสินค้า/รายการ", "ยอดยกมา", "ซื้อสินค้า", "รับสินค้า", "โอน(เข้า)", "โอน(ออก)", "ของเสีย", "แจกฟรี", "รับเข้าจากการแปรรูป", "จ่ายออกเพื่อแปรรูป", "ขาย", "ปรับยอด", "คงเหลือ", "ตรวจนับ", "(ขาด)/เกิน", "มูลค่า(ขาด)/เกิน", "ผู้บันทึกตรวจนับ", "หมายเหตุ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTempmove);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("รายงานความเคลือนไหวสินค้ารายวัน (Stock Movement)", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1018, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1024, 764));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

private void cmdProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProcessActionPerformed
    cmdProcess();
}//GEN-LAST:event_cmdProcessActionPerformed

private void cmdProcessKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdProcessKeyPressed
}//GEN-LAST:event_cmdProcessKeyPressed

private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
    report.stockMovementPrintReport(txt1.getText().trim(), txt2.getText().trim(), txtPcode1.getText().trim(), txtPcode2.getText().trim(), txtGroupFile1.getText().trim(), txtGroupFile2.getText().trim(), txtStockFile.getText().trim(), true);
}//GEN-LAST:event_cmdPrintActionPerformed

private void cmdPcode1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPcode1ActionPerformed
    Jdi_Inv_product jbpa = new Jdi_Inv_product(new NimbusFrame(), true);
    jbpa.setLocation(cmdPcode1.getLocationOnScreen());
    jbpa.setVisible(true);
    if (jbpa.getDataRecord() != null) {
        txtPcode1.setText(jbpa.getDataRecord().getPcode());
    }
}//GEN-LAST:event_cmdPcode1ActionPerformed

private void cmdPcode2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPcode2ActionPerformed
    Jdi_Inv_product jbpa = new Jdi_Inv_product(new NimbusFrame(), true);
    jbpa.setLocation(cmdPcode2.getLocationOnScreen());
    jbpa.setVisible(true);
    if (jbpa.getDataRecord() != null) {
        txtPcode2.setText(jbpa.getDataRecord().getPcode());
    }
}//GEN-LAST:event_cmdPcode2ActionPerformed

private void cmdGroup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGroup1ActionPerformed
    jdi_showgroupfile js = new jdi_showgroupfile(new NimbusFrame(), true);
    js.setLocation(cmdGroup1.getLocationOnScreen());
    js.setVisible(true);
    try {
        txtGroupFile1.setText(js.getValueFromShowGroupFile()[0]);
    } catch (NullPointerException ex) {
    }
    txtGroupFile1.requestFocus();
}//GEN-LAST:event_cmdGroup1ActionPerformed

private void cmdGroup2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGroup2ActionPerformed
    jdi_showgroupfile js = new jdi_showgroupfile(new NimbusFrame(), true);
    js.setLocation(cmdGroup2.getLocationOnScreen());
    js.setVisible(true);
    try {
        txtGroupFile2.setText(js.getValueFromShowGroupFile()[0]);
    } catch (NullPointerException ex) {
    }
    txtGroupFile2.requestFocus();
}//GEN-LAST:event_cmdGroup2ActionPerformed

private void cmdStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStockActionPerformed
    Jdi_browse_stockfile jbs = new Jdi_browse_stockfile(new NimbusFrame(), true);
    jbs.setVisible(true);
    if (jbs.getDataRecord() != null) {
        txtStockFile.setText(jbs.getDataRecord().getStkcode());
        lbStockFile.setText(jbs.getDataRecord().getStkname());
    }
    txtStockFile.requestFocus();
}//GEN-LAST:event_cmdStockActionPerformed

private void txtPcode1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPcode1FocusGained
    txtPcode1.selectAll();
}//GEN-LAST:event_txtPcode1FocusGained

private void txtPcode2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPcode2FocusGained
    txtPcode2.selectAll();
}//GEN-LAST:event_txtPcode2FocusGained

private void txtGroupFile1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGroupFile1FocusGained
    //txtGroupFile1.selectAll();
}//GEN-LAST:event_txtGroupFile1FocusGained

private void txtGroupFile2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGroupFile2FocusGained
    //txtGroupFile2.selectAll();
}//GEN-LAST:event_txtGroupFile2FocusGained

private void txtStockFileFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStockFileFocusGained
    //txtStockFile.selectAll();
}//GEN-LAST:event_txtStockFileFocusGained

private void txtPcode1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPcode1KeyReleased
}//GEN-LAST:event_txtPcode1KeyReleased

private void txtPcode2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPcode2KeyReleased
}//GEN-LAST:event_txtPcode2KeyReleased

private void txtGroupFile1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroupFile1KeyReleased
}//GEN-LAST:event_txtGroupFile1KeyReleased

private void txtGroupFile2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroupFile2KeyReleased
}//GEN-LAST:event_txtGroupFile2KeyReleased

private void txtStockFileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockFileKeyReleased
}//GEN-LAST:event_txtStockFileKeyReleased

private void cmdDateChoose2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateChoose2ActionPerformed

    Point point = cmdDateChoose2.getLocationOnScreen();
    utilities.DateChooser.DateChooserDialog dcd = new utilities.DateChooser.DateChooserDialog(null, true, point);
    dcd.setVisible(true);
    txt2.setText(dateFmtShow.format(dcd.getSelectedDate().getTime()));
    txtPcode1.requestFocus();
}//GEN-LAST:event_cmdDateChoose2ActionPerformed

private void cmdDateChoose2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmdDateChoose2FocusGained
}//GEN-LAST:event_cmdDateChoose2FocusGained

private void cmdDateChoose2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdDateChoose2KeyPressed
}//GEN-LAST:event_cmdDateChoose2KeyPressed

private void txt2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt2FocusGained
    if (txt2.getText().trim().equals("")) {
        txt2.setText(dateFmtShow.format(Calendar.getInstance().getTime()));
        txt2.selectAll();
    }
    if (txt1.getText().trim().equals("")) {
        txt1.requestFocus();
    }
}//GEN-LAST:event_txt2FocusGained

private void txt2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt2KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtPcode1.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if(isClose){
            this.dispose();
        }else{
            PUtility.ShowError("กำลังประมวลผลรายการความเคลื่อนไหว ไม่สามารถออกจากหน้าจอนี้ได้ \n" +
                    "กรุณารอสักครู่...");
        }
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {

        Point point = cmdDateChoose2.getLocation();
        point.setLocation(point.getX(), point.getY() + 115);
        utilities.DateChooser.DateChooserDialog dcd = new utilities.DateChooser.DateChooserDialog(null, true, point);
        dcd.setVisible(true);
        txt2.setText(dateFmtShow.format(dcd.getSelectedDate().getTime()));
        txtPcode1.requestFocus();
    }
}//GEN-LAST:event_txt2KeyPressed

private void cmdDateChoose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateChoose1ActionPerformed

    Point point = cmdDateChoose1.getLocationOnScreen();
    utilities.DateChooser.DateChooserDialog dcd = new utilities.DateChooser.DateChooserDialog(null, true, point);
    dcd.setVisible(true);
    txt1.setText(dateFmtShow.format(dcd.getSelectedDate().getTime()));
    txt2.requestFocus();
}//GEN-LAST:event_cmdDateChoose1ActionPerformed

private void cmdDateChoose1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdDateChoose1KeyPressed
}//GEN-LAST:event_cmdDateChoose1KeyPressed

private void txt1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt1FocusGained
    if (txt1.getText().trim().equals("")) {
        txt1.setText(dateFmtShow.format(Calendar.getInstance().getTime()));
        txt1.selectAll();
    }
}//GEN-LAST:event_txt1FocusGained
boolean isClose = true;

private void txt1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txt2.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if(isClose){
            this.dispose();
        }else{
            PUtility.ShowError("กำลังประมวลผลรายการความเคลื่อนไหว ไม่สามารถออกจากหน้าจอนี้ได้ \n" +
                    "กรุณารอสักครู่...");
        }
    }
    if (evt.getKeyCode() == KeyEvent.VK_F1) {

        Point point = cmdDateChoose1.getLocation();
        point.setLocation(point.getX(), point.getY() + 115);
        utilities.DateChooser.DateChooserDialog dcd = new utilities.DateChooser.DateChooserDialog(null, true, point);
        dcd.setVisible(true);
        txt1.setText(dateFmtShow.format(dcd.getSelectedDate().getTime()));
        txt2.requestFocus();
    }

}//GEN-LAST:event_txt1KeyPressed

private void txt1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt1KeyReleased
}//GEN-LAST:event_txt1KeyReleased

private void txt2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt2KeyReleased
}//GEN-LAST:event_txt2KeyReleased

private void txtGroupFile1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroupFile1KeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        cmdGroup1ActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtGroupFile2.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if(isClose){
            this.dispose();
        }else{
            PUtility.ShowError("กำลังประมวลผลรายการความเคลื่อนไหว ไม่สามารถออกจากหน้าจอนี้ได้ \n" +
                    "กรุณารอสักครู่...");
        }
    }
}//GEN-LAST:event_txtGroupFile1KeyPressed

private void txtGroupFile2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroupFile2KeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        cmdGroup2ActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtStockFile.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if(isClose){
            this.dispose();
        }else{
            PUtility.ShowError("กำลังประมวลผลรายการความเคลื่อนไหว ไม่สามารถออกจากหน้าจอนี้ได้ \n" +
                    "กรุณารอสักครู่...");
        }
    }
}//GEN-LAST:event_txtGroupFile2KeyPressed

private void txtPcode1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPcode1KeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        cmdPcode1ActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtPcode2.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if(isClose){
            this.dispose();
        }else{
            PUtility.ShowError("กำลังประมวลผลรายการความเคลื่อนไหว ไม่สามารถออกจากหน้าจอนี้ได้ \n" +
                    "กรุณารอสักครู่...");
        }
    }
}//GEN-LAST:event_txtPcode1KeyPressed

private void txtPcode2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPcode2KeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        cmdPcode2ActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtGroupFile1.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if(isClose){
            this.dispose();
        }else{
            PUtility.ShowError("กำลังประมวลผลรายการความเคลื่อนไหว ไม่สามารถออกจากหน้าจอนี้ได้ \n" +
                    "กรุณารอสักครู่...");
        }
    }
}//GEN-LAST:event_txtPcode2KeyPressed

private void txtStockFileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockFileKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        cmdStockActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txt1.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        if(isClose){
            this.dispose();
        }else{
            PUtility.ShowError("กำลังประมวลผลรายการความเคลื่อนไหว ไม่สามารถออกจากหน้าจอนี้ได้ \n" +
                    "กรุณารอสักครู่...");
        }
    }
}//GEN-LAST:event_txtStockFileKeyPressed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    if(isClose){
        this.dispose();
    }else{
        PUtility.ShowError("กำลังประมวลผลรายการความเคลื่อนไหว ไม่สามารถออกจากหน้าจอนี้ได้ \n" +
                "กรุณารอสักครู่...");
    }
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Jdi_report_stockmovement dialog = new Jdi_report_stockmovement(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SumX1;
    private javax.swing.JTextField SumX2;
    private javax.swing.JTextField SumX3;
    private javax.swing.JButton cmdDateChoose1;
    private javax.swing.JButton cmdDateChoose2;
    private javax.swing.JButton cmdGroup1;
    private javax.swing.JButton cmdGroup2;
    private javax.swing.JButton cmdPcode1;
    private javax.swing.JButton cmdPcode2;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdProcess;
    private javax.swing.JButton cmdStock;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbStockFile;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JTable tblTempmove;
    private javax.swing.JFormattedTextField txt1;
    private javax.swing.JFormattedTextField txt2;
    private javax.swing.JTextField txtGroupFile1;
    private javax.swing.JTextField txtGroupFile2;
    private javax.swing.JTextField txtPcode1;
    private javax.swing.JTextField txtPcode2;
    private javax.swing.JTextField txtRowCount;
    private javax.swing.JTextField txtStockFile;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel model;
    SimpleDateFormat dateFmtShow = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat dateFmtSQL = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    DecimalFormat IntegerFmt = new DecimalFormat("##,###,##0");
    DecimalFormat FloatFmt = new DecimalFormat("##,###,##0.00");
    DecimalFormat qtyFmt = new DecimalFormat("##,###,##0.000");

    private void cmdProcess() {
        if (txtStockFile.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนดรหัสคลังสินค้า...");
            txtStockFile.requestFocus();
            return;
        }
        Thread SendData = new Thread(new ProcessSend());
        SendData.start();

    }

    private ResultSet getTempmoveSQL() throws SQLException {
        String sql = "SELECT * , (t.pret-t.peom) as PDif,(t.pret-t.peom)*p.pprice11 As PDifAmt "
                + "FROM tempmove t "
                + " LEFT JOIN product p ON t.pcode = p.pcode "
                + "where (pbom<>0) or (pbuy<>0) or (prec<>0) or (ptri<>0) or (ptro<>0) or "
                + "(plos<>0) or (pfre<>0) or (pcon_a<>0) or (pcon_d<>0) "
                + "or (psal<>0) or (padj<>0) or (pret<>0) or (peom<>0) "
                + "order by t.pgroup,t.pcode";
        return MySQLConnect.con.createStatement().executeQuery(sql);
    }

    private void loadDataToTableTempmove(ResultSet rs) throws SQLException {
        String[] row = new String[tblTempmove.getColumnCount()];
        int AQty1 = 0;
        int AQty2 = 0;
        int AQty3 = 0;
        Double AAmt1 = 0.0;
        Double AAmt2 = 0.0;
        Double AAmt3 = 0.0;
        while (rs.next()) {
            row[0] = rs.getString("pgroup");
            row[1] = rs.getString("pcode");
            row[2] = rs.getString("pdesc");
            //ยอดยกมา
            row[3] = qtyFmt.format(rs.getFloat("pbom"));
            row[4] = qtyFmt.format(rs.getFloat("pbuy"));
            row[5] = qtyFmt.format(rs.getFloat("prec"));
            row[6] = qtyFmt.format(rs.getFloat("ptri"));
            row[7] = qtyFmt.format(rs.getFloat("ptro"));
            row[8] = qtyFmt.format(rs.getFloat("plos"));
            row[9] = qtyFmt.format(rs.getFloat("pfre"));
            //สำหรับสินค้าแปรรูปเพิ่มเข้ามา
            row[10] = qtyFmt.format(rs.getFloat("pcon_a"));
            row[11] = qtyFmt.format(rs.getFloat("pcon_d"));
            //----------------------
            //ขาย
            row[12] = qtyFmt.format(rs.getFloat("psal"));
            //ปรับยอด
            row[13] = qtyFmt.format(rs.getFloat("padj"));

            row[14] = qtyFmt.format(rs.getFloat("peom"));
            row[15] = qtyFmt.format(rs.getFloat("pret"));
            row[16] = qtyFmt.format(rs.getFloat("pdif"));
            //มูลค่า(ขาด)/เกิน
            row[17] = FloatFmt.format(rs.getFloat("pdifamt"));
            row[18] = rs.getString("puser");
            row[19] = rs.getString("prem");
            model.addRow(row);
            if (rs.getDouble("pdif") < 0) {
                AQty1++;
                AAmt1 = AAmt1 + rs.getDouble("pdifamt");
            }
            if (rs.getDouble("pdif") > 0) {
                AQty2++;
                AAmt2 = AAmt2 + rs.getDouble("pdifamt");
            }
            if (rs.getDouble("pdif") == 0) {
                AQty3++;
                AAmt3 = AAmt3 + rs.getDouble("pdifamt");
            }
        }

        SumX1.setText(IntFmt.format(AQty1) + "/" + FloatFmt.format(AAmt1));
        SumX2.setText(IntFmt.format(AQty2) + "/" + FloatFmt.format(AAmt2));
        SumX3.setText(IntFmt.format(AQty3));
        txtRowCount.setText("จำนวนรายการ : " + IntegerFmt.format(model.getRowCount()));
    }

    private void resetTableModel(DefaultTableModel model) {
        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            model.removeRow(0);
        }
    }

    private void setTable() {
        tblTempmove.setShowGrid(true);
        tblTempmove.setAutoCreateRowSorter(true);
        tblTempmove.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblTempmove.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblTempmove.setRowSelectionAllowed(true);
        tblTempmove.setShowGrid(true);
        tblTempmove.setBackground(Color.WHITE);
        tblTempmove.setGridColor(Color.LIGHT_GRAY);

        JTableHeader header = tblTempmove.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblTempmove.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblTempmove.setRowHeight(25);

        //Setting column size
        TableColumn column = null;
        int[] colSize = {40, 75, 120, 65, 50, 65, 65, 65, 65, 65, 65, 65, 65,
            65, 65, 65, 65, 100, 100, 100};
        tblTempmove.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < tblTempmove.getColumnCount(); i++) {
            column = tblTempmove.getColumnModel().getColumn(i);
            column.setPreferredWidth(colSize[i]);
        }

        DefaultTableCellRenderer tbc = new DefaultTableCellRenderer();
        tbc.setBackground(java.awt.Color.yellow);
        tbc.setHorizontalAlignment(SwingConstants.RIGHT);

        DefaultTableCellRenderer tbc2 = new DefaultTableCellRenderer();
        tbc2.setBackground(java.awt.Color.magenta);
        tbc2.setHorizontalAlignment(SwingConstants.RIGHT);

        TableColumnModel tcm = tblTempmove.getColumnModel();

        DefaultTableCellRenderer d;

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.LEADING);
        tcm.getColumn(0).setCellRenderer(d);
        tcm.getColumn(1).setCellRenderer(d);
        tcm.getColumn(2).setCellRenderer(d);
        tcm.getColumn(16).setCellRenderer(d);
        tcm.getColumn(17).setCellRenderer(d);



        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(3).setCellRenderer(tbc);
        tcm.getColumn(4).setCellRenderer(d);
        tcm.getColumn(5).setCellRenderer(d);
        tcm.getColumn(6).setCellRenderer(d);
        tcm.getColumn(7).setCellRenderer(d);
        tcm.getColumn(8).setCellRenderer(d);
        tcm.getColumn(9).setCellRenderer(d);
        tcm.getColumn(10).setCellRenderer(d);
        tcm.getColumn(11).setCellRenderer(d);
        tcm.getColumn(12).setCellRenderer(tbc);
        tcm.getColumn(13).setCellRenderer(tbc2);
        tcm.getColumn(14).setCellRenderer(d);
        tcm.getColumn(15).setCellRenderer(d);
        tcm.getColumn(16).setCellRenderer(d);
        tcm.getColumn(17).setCellRenderer(d);
        tblTempmove.setAutoCreateRowSorter(true);
    }

    private class ProcessSend extends javax.swing.JDialog implements Runnable {

        public void run() {
            cmdProcess.setEnabled(false);
            isClose = false;
            Calendar ca1 = new GregorianCalendar();
            Calendar ca2 = new GregorianCalendar();
            if (!PUtility.ChkDate(txt1.getText())) {
                txt1.requestFocus();
                return;
            } else {
                ca1 = PUtility.StrToCalendar(txt1.getText());
            }
            if (!PUtility.ChkDate(txt2.getText())) {
                txt2.requestFocus();
                return;
            } else {
                ca2 = PUtility.StrToCalendar(txt2.getText());
            }

            resetTableModel(model);
            SendStock(ca1, ca2);
            try {
                loadDataToTableTempmove(getTempmoveSQL());
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            cmdProcess.setEnabled(true);
            isClose = true;
        }

        public int GetActMonth(Date TempDate) {
            int ReturnVal = 0;
            Date Acterm = new Date();
            try {
                Statement stmt = (Statement) MySQLConnect.con.createStatement();
                String SqlQuery = "select *from company ";
                ResultSet rec = stmt.executeQuery(SqlQuery);
                rec.first();
                if (rec.getRow() == 0) {
                } else {
                    Acterm = rec.getDate("accterm");
                    int ActermYear = Integer.parseInt(SqlDateFmt.format(Acterm).substring(0, 4));
                    int TempDateYear = Integer.parseInt(SqlDateFmt.format(TempDate).substring(0, 4));
                    if (ActermYear == TempDateYear) {
                        ReturnVal = Integer.parseInt(SqlDateFmt.format(TempDate).substring(5, 7)) + 12;
                    } else {
                        if (ActermYear == TempDateYear + 1) {
                            ReturnVal = Integer.parseInt(SqlDateFmt.format(TempDate).substring(5, 7));
                        } else {
                            ReturnVal = 0;
                        }
                    }
                }
                rec.close();
                stmt.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            return ReturnVal;
        }

        public void SendStock(Calendar Tempca, Calendar Tempca2) {
            try {
                Statement stmt5 = (Statement) MySQLConnect.con.createStatement();
                String SqlQuery5 = "delete from tempmove";
                stmt5.executeUpdate(SqlQuery5);
                stmt5.close();
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            String TCode1 = txtPcode1.getText();
            String TCode2 = txtPcode2.getText();
            if (txtPcode2.getText().equals("")) {
                TCode2 = "ZZZZZZZZZZZZZ";
            }
            String TDept1 = txtGroupFile1.getText();
            String TDept2 = txtGroupFile2.getText();
            if (txtGroupFile2.getText().equals("")) {
                TDept2 = "ZZZZZ";
            }
            SimpleDateFormat DateFmtM = new SimpleDateFormat("MM/yyyy", Locale.ENGLISH);
            String TempStrDate = "01/" + DateFmtM.format(Tempca.getTime());
            Date TempDate = new Date();
            try {
                TempDate = DateFmt.parse(TempStrDate);
            } catch (java.text.ParseException ex) {
                Logger.getLogger(Jdi_report_stockmovement.class.getName()).log(Level.SEVERE, null, ex);
            }
            int TempAct = GetActMonth(TempDate) - 1;
            String TempFieldName = "bqty" + IntFmt.format(TempAct).trim();

            int TotalRec = 0;
            int CurRec = 0;
            String STK = txtStockFile.getText();
            //----------------------------------------------------------------------------------------
            //----------------------------------------------------------------------------------------
            //----------------------------------------------------------------------------------------
            //----------------------------------------------------------------------------------------
            try {
               Statement stmt = (Statement) MySQLConnect.con.createStatement();
               String SQLQuery = "Drop TABLE stcardtemp " ;
               stmt.executeUpdate(SQLQuery);
               stmt.close();
            } catch (SQLException e) {
                e.printStackTrace();
               JOptionPane.showMessageDialog(this, e.getMessage());
            }
            try {
               Statement stmt = (Statement) MySQLConnect.con.createStatement();
               String SQLQuery = "Drop TABLE stcardtemp2 " ;
               stmt.executeUpdate(SQLQuery);
               stmt.close();
            } catch (SQLException e) {
                e.printStackTrace();
               JOptionPane.showMessageDialog(this, e.getMessage());
            }

            try {
               Statement stmt = (Statement) MySQLConnect.con.createStatement();
               String SQLQuery = "create TABLE stcardtemp " +
                       "Select S_PCode,S_Stk,S_Rem,Sum(S_In),Sum(S_Out),S_User from stcard " +
                       "where  s_stk='" + STK + "' and s_date>='" + SqlDateFmt.format(Tempca.getTime()) + "' and s_date<='" + SqlDateFmt.format(Tempca2.getTime()) + "' " +
                                    "group by s_pcode,s_rem ";
               stmt.executeUpdate(SQLQuery);
               //ResultSet rec = stmt.executeQuery(SQLQuery);
               stmt.close();
            } catch (SQLException e) {
                e.printStackTrace();
               JOptionPane.showMessageDialog(this, e.getMessage());
            }

            try {
               Statement stmt = (Statement) MySQLConnect.con.createStatement();
               String SQLQuery = "create TABLE stcardtemp2 " +
                       "select s_pcode,s_stk,sum(s_in),sum(s_out) from stcard  " +
                                    "where  s_stk='" + STK + "' and s_date>='" + SqlDateFmt.format(TempDate) + "' and s_date<'" + SqlDateFmt.format(Tempca.getTime()) + "' " +
                                    "group by s_pcode";
               stmt.executeUpdate(SQLQuery);
               //ResultSet rec = stmt.executeQuery(SQLQuery);
               stmt.close();
            } catch (SQLException e) {
                e.printStackTrace();
               JOptionPane.showMessageDialog(this, e.getMessage());
            }
            //----------------------------------------------------------------------------------------
            //----------------------------------------------------------------------------------------
            //----------------------------------------------------------------------------------------
            //----------------------------------------------------------------------------------------
            try {
                Statement stmt = (Statement) MySQLConnect.con.createStatement();
                String SqlQuery = "select pcode,pgroup,pdesc from product "
                        + "where pstock='Y' and pactive='Y' and pcode>='" + TCode1 + "' "
                        + "and pcode<='" + TCode2 + "' and pgroup>='" + TDept1 + "' and pgroup<='" + TDept2 + "'";
                String sqlCount = "select count(pcode) from product "
                        + "where pstock='Y' and pactive='Y' and pcode>='" + TCode1 + "' "
                        + "and pcode<='" + TCode2 + "' and pgroup>='" + TDept1 + "' and pgroup<='" + TDept2 + "'";
                ResultSet rec = stmt.executeQuery(SqlQuery);
                Statement stmtCount = (Statement) MySQLConnect.con.createStatement();
                ResultSet recCount = stmtCount.executeQuery(sqlCount);
                //count all product
                if (recCount.next()) {
                    TotalRec = recCount.getInt(1);
                }
                recCount.close();
                stmtCount.close();

                rec.first();
                if (rec.getRow() == 0) {
                } else {
                    do {
                        CurRec++;
                        txtRowCount.setText("รายการที่ " + IntFmt.format(CurRec) + "/" +
                                IntFmt.format(TotalRec));
                        String TempCode = rec.getString("pcode");
                        String TempName = rec.getString("pdesc");
                        String TempDept = rec.getString("pgroup");
                        
                        //if (TempCode.equals("6210")) {
                        //    JOptionPane.showMessageDialog(this, "6210");
                        //}

                        double TBOM = 0.0;
                        double TBUY = 0.0;
                        double TREC = 0.0;
                        double TTRI = 0.0;
                        double TTRO = 0.0;
                        double TLOS = 0.0;
                        double TFRE = 0.0;
                        double TRET = 0.0;
                        double TSAL = 0.0;
                        double TADJ = 0.0;
                        //สำหรับแปรรูป
                        double TCon1 = 0.0;
                        double TCon2 = 0.0;
                        String TUser = "";
                        String TRem = "";

                        try {
                            Statement stmt2 = (Statement) MySQLConnect.con.createStatement();

                            String SqlQuery2 = "select " + TempFieldName + " from stkfile  "
                                    + "where  bpcode ='" + TempCode + "' and bstk='" + STK + "'";
                            ResultSet rec2 = stmt2.executeQuery(SqlQuery2);
                            rec2.first();
                            if (rec2.getRow() == 0) {
                            } else {
//                                TempFieldName = "bqty" + IntFmt.format(TempAct).trim();
                                TBOM = rec2.getDouble(1);
                            }
                            rec2.close();
                            stmt2.close();
                        } catch (SQLException e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, e.getMessage());
                        }

                        try {
                            Statement stmt3 = (Statement) MySQLConnect.con.createStatement();
                            String SqlQuery3 = "select * from stcardtemp2  "
                                    + "where s_pcode ='" + TempCode + "'";
                            ResultSet rec3 = stmt3.executeQuery(SqlQuery3);
                            rec3.first();
                            if (rec3.getRow() == 0) {
                            } else {
                                TBOM = TBOM + rec3.getDouble("sum(s_in)") - rec3.getDouble("sum(s_out)");
                            }
                            rec3.close();
                            stmt3.close();
                        } catch (SQLException e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, e.getMessage());
                        }

                        try {
                            Statement stmt4 = (Statement) MySQLConnect.con.createStatement();
                            String SqlQuery4 = "select *from stcardtemp  " +
                                    "where  s_pcode ='" + TempCode + "'" ;
                            
                            ResultSet rec4 = stmt4.executeQuery(SqlQuery4);
                            rec4.first();
                            if (rec4.getRow() == 0) {
                            } else {
                                do {
                                    if (rec4.getString("s_rem").equals("BUY")) {
                                        TBUY = rec4.getDouble("sum(s_in)");
                                    } else if (rec4.getString("s_rem").equals("REC")) {
                                        TREC = rec4.getDouble("sum(s_in)");
                                    } else if (rec4.getString("s_rem").equals("TRI")) {
                                        TTRI = rec4.getDouble("sum(s_in)");
                                    } else if (rec4.getString("s_rem").equals("TRO")) {
                                        TTRO = rec4.getDouble("sum(s_out)");
                                    } else if (rec4.getString("s_rem").equals("LOS")) {
                                        TLOS = rec4.getDouble("sum(s_out)");
                                    } else if (rec4.getString("s_rem").equals("FRE")) {
                                        TFRE = rec4.getDouble("sum(s_out)");
                                    } else if (rec4.getString("s_rem").equals("SAL")) {
                                        TSAL = rec4.getDouble("sum(s_out)");
                                    } else if (rec4.getString("s_rem").equals("ADJ")) {
                                        TADJ = rec4.getDouble("sum(s_out)") + rec4.getDouble("sum(s_in)");
                                    } else if (rec4.getString("s_rem").equals("CON+")) {
                                        TCon1 = rec4.getDouble("sum(s_in)");
                                    } else if (rec4.getString("s_rem").equals("CON-")) {
                                        TCon2 = rec4.getDouble("sum(s_out)");
                                    }
                                } while (rec4.next());
                            }
                            rec4.close();
                            stmt4.close();
                        } catch (SQLException e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, e.getMessage());
                        }

                        try {
                            Statement stmt5 = (Statement) MySQLConnect.con.createStatement();
                            String SqlQuery5 = "select r_inhand, hadjstock.r_user, hadjstock.r_remark " +
                                    "from adjstock "
                                    + "left join hadjstock on adjstock.r_no=hadjstock.r_no  "
                                    + "where  r_pcode ='" + TempCode + "' "
                                    + "and r_date='" + SqlDateFmt.format(Tempca2.getTime()) + "'";
                            ResultSet rec5 = stmt5.executeQuery(SqlQuery5);
                            rec5.first();
                            if (rec5.getRow() == 0) {
                            } else {
                                do {
                                    TRET = rec5.getDouble("r_inhand");
                                    TUser = rec5.getString("r_user");
                                    TRem = rec5.getString("r_remark");
                                } while (rec5.next());
                            }
                            rec5.close();
                            stmt5.close();
                        } catch (SQLException e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, e.getMessage());
                        }
                        try {
                            Statement stmt5 = (Statement) MySQLConnect.con.createStatement();
                            String SqlQuery5 = "insert into tempmove "
                                    + "(pcode,pgroup,pdesc,pbom,pbuy,prec,ptri,ptro,plos,pfre,"
                                    + "pcon_a,pcon_d,pret,psal,padj,peom,puser,prem) "
                                    + "values ('" + TempCode + "',"
                                    + "'" + TempDept + "',"
                                    + "'" + FilterNameToMYSQL.trueName(TempName) + "',"
                                    + TBOM + ","
                                    + TBUY + ","
                                    + TREC + ","
                                    + TTRI + ","
                                    + TTRO + ","
                                    + TLOS + ","
                                    + TFRE + ","
                                    + TCon1 + ","
                                    + TCon2 + ","
                                    + TRET + ","
                                    + TSAL + ","
                                    + TADJ + ","
                                    + (TBOM + TBUY + TREC + TTRI + TADJ - TTRO - TLOS - TFRE - TSAL + TCon1 - TCon2) + ","
                                    + "'" + TUser + "',"
                                    + "'" + TRem + "')";
                            stmt5.executeUpdate(SqlQuery5);
                            stmt5.close();
                        } catch (SQLException e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Error " + TempCode + " " + TempName);
                        }
                    } while (rec.next());
                }
                rec.close();
                stmt.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

        }
    }
}
