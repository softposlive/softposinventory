package Main.viewreport;

import Main.browser.Jdi_browse_stockfile;
import report.ViewReport;
import DBcontrol.MySQLConnect;
import Main.browser.jdi_showgroupfile;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import utilities.NimbusFrame;
import utilities.TableTestFormatRenderer;
import utilities.date_time.DateAndTime;

public class Jdi_report_stockcard_all extends javax.swing.JDialog {

    private String sqltoReport = "";

    public Jdi_report_stockcard_all(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTableProduct();
        setTableStkfile();
        setYear();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbMonth = new javax.swing.JComboBox();
        lblMonth = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbYear = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        txtPcode1 = new javax.swing.JTextField();
        cmdPcode1 = new javax.swing.JButton();
        txtPcode2 = new javax.swing.JTextField();
        cmdPcode2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtGroupFile1 = new javax.swing.JTextField();
        cmdGroup1 = new javax.swing.JButton();
        txtGroupFile2 = new javax.swing.JTextField();
        cmdGroup2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        txtStockFile = new javax.swing.JTextField();
        cmdStock = new javax.swing.JButton();
        lbStockFile = new javax.swing.JLabel();
        cmdProcess = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel9 = new javax.swing.JPanel();
        txtStkCount = new javax.swing.JTextField();
        txtIn = new javax.swing.JTextField();
        txtIncost = new javax.swing.JTextField();
        txtOutcost = new javax.swing.JTextField();
        txtOut = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStkcard = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        lbl1 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        lbl3 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        txtProCount = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtOtyBefore = new javax.swing.JTextField();
        txtOtyNow = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("รายงานบัญชีคุมสินค้าพิเศษ (Stock Card)");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "กำหนดงวดเดือน", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Norasi", 0, 16));
        jLabel1.setText("เดือน");

        cbMonth.setEditable(true);
        cbMonth.setFont(new java.awt.Font("Norasi", 1, 16));
        cbMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        cbMonth.setVerifyInputWhenFocusTarget(false);
        cbMonth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbMonthKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbMonthKeyReleased(evt);
            }
        });

        lblMonth.setFont(new java.awt.Font("Norasi", 0, 14));

        jLabel3.setFont(new java.awt.Font("Norasi", 0, 16));
        jLabel3.setText("ปี");

        cbYear.setEditable(true);
        cbYear.setFont(new java.awt.Font("Norasi", 1, 16));
        cbYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0000" }));
        cbYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbYearKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbYearKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(4, 4, 4)
                .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMonth, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(lblMonth, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                    .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "กำหนดช่วงรหัสสินค้า", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        txtPcode1.setFont(new java.awt.Font("Norasi", 0, 16));
        txtPcode1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPcode1FocusGained(evt);
            }
        });
        txtPcode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPcode1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPcode1KeyReleased(evt);
            }
        });

        cmdPcode1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdPcode1.setFocusable(false);
        cmdPcode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPcode1ActionPerformed(evt);
            }
        });

        txtPcode2.setFont(new java.awt.Font("Norasi", 0, 16));
        txtPcode2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPcode2FocusGained(evt);
            }
        });
        txtPcode2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPcode2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPcode2KeyReleased(evt);
            }
        });

        cmdPcode2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdPcode2.setFocusable(false);
        cmdPcode2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPcode2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdPcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdPcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtPcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cmdPcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdPcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "กำหนดช่วงแผนก", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        txtGroupFile1.setFont(new java.awt.Font("Norasi", 0, 16));
        txtGroupFile1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGroupFile1FocusGained(evt);
            }
        });
        txtGroupFile1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGroupFile1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGroupFile1KeyReleased(evt);
            }
        });

        cmdGroup1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdGroup1.setFocusable(false);
        cmdGroup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGroup1ActionPerformed(evt);
            }
        });

        txtGroupFile2.setFont(new java.awt.Font("Norasi", 0, 16));
        txtGroupFile2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGroupFile2FocusGained(evt);
            }
        });
        txtGroupFile2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGroupFile2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGroupFile2KeyReleased(evt);
            }
        });

        cmdGroup2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdGroup2.setFocusable(false);
        cmdGroup2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGroup2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtGroupFile2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtGroupFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdGroup2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cmdGroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGroupFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtGroupFile2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdGroup2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "คลังสินค้า", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        txtStockFile.setFont(new java.awt.Font("Norasi", 0, 16));
        txtStockFile.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtStockFile.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtStockFileFocusGained(evt);
            }
        });
        txtStockFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStockFileKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStockFileKeyReleased(evt);
            }
        });

        cmdStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdStock.setFocusable(false);
        cmdStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdStockActionPerformed(evt);
            }
        });

        lbStockFile.setFont(new java.awt.Font("Norasi", 1, 14));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtStockFile, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cmdStock, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbStockFile, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cmdStock, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStockFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbStockFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cmdProcess.setFont(new java.awt.Font("Norasi", 1, 14));
        cmdProcess.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/SandClock.png"))); // NOI18N
        cmdProcess.setText("F5-ประมวณผล");
        cmdProcess.setFocusable(false);
        cmdProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProcessActionPerformed(evt);
            }
        });
        cmdProcess.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmdProcessKeyPressed(evt);
            }
        });

        cmdPrint.setFont(new java.awt.Font("Norasi", 1, 14));
        cmdPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print.gif"))); // NOI18N
        cmdPrint.setText("พิมพ์");
        cmdPrint.setFocusable(false);
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });
        cmdPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmdPrintKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(cmdProcess, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cmdProcess)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdPrint))
                            .addComponent(jPanel5, 0, 106, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        jTabbedPane1.setFont(new java.awt.Font("Norasi", 1, 14));

        jSplitPane1.setDividerLocation(350);
        jSplitPane1.setDividerSize(3);

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtStkCount.setEditable(false);
        txtStkCount.setFont(new java.awt.Font("Norasi", 0, 14));
        txtStkCount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtStkCount.setText("0 รายการ");
        txtStkCount.setFocusable(false);

        txtIn.setEditable(false);
        txtIn.setFont(new java.awt.Font("Norasi", 0, 14));
        txtIn.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIn.setText("0");
        txtIn.setFocusable(false);

        txtIncost.setEditable(false);
        txtIncost.setFont(new java.awt.Font("Norasi", 0, 14));
        txtIncost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIncost.setText("0");
        txtIncost.setFocusable(false);

        txtOutcost.setEditable(false);
        txtOutcost.setFont(new java.awt.Font("Norasi", 0, 14));
        txtOutcost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOutcost.setText("0");
        txtOutcost.setFocusable(false);

        txtOut.setEditable(false);
        txtOut.setFont(new java.awt.Font("Norasi", 0, 14));
        txtOut.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOut.setText("0");
        txtOut.setFocusable(false);

        tblStkcard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "วันที่ (Date)", "เลขที่เอกสาร", "คลัง", "เข้า", "มูลค่า", "ออก", "มูลค่า", "S_Ram", "ผู้บันทึก", "วันที่บันทึก", "เวลา"
            }
        ));
        jScrollPane2.setViewportView(tblStkcard);

        jLabel7.setFont(new java.awt.Font("Norasi", 0, 14));
        jLabel7.setText("รหัสสินค้า (PLU Code)");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 81, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        lbl1.setFont(new java.awt.Font("Norasi", 1, 14));

        lbl2.setFont(new java.awt.Font("Norasi", 1, 14));

        lbl3.setFont(new java.awt.Font("Norasi", 1, 14));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 59, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl1)
                        .addGap(50, 50, 50)
                        .addComponent(lbl2)
                        .addGap(50, 50, 50)
                        .addComponent(lbl3))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(txtStkCount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(txtIn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtIncost, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtOut, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtOutcost, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(txtIncost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtStkCount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOutcost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jSplitPane1.setRightComponent(jPanel9);

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัส (PLU Code)", "แผนก", "ชื่อสินค้า / รายการ", "ชื่อแผนก"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        tblProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblProductKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduct);

        txtProCount.setEditable(false);
        txtProCount.setFont(new java.awt.Font("Norasi", 0, 14));
        txtProCount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtProCount.setText("0 รายการ");
        txtProCount.setFocusable(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtProCount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(184, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(txtProCount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jSplitPane1.setLeftComponent(jPanel10);

        jPanel7.setBorder(null);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel5.setText("จำนวนสินค้าต้นงวด");

        jLabel6.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel6.setText("จำนวนสินค้าปลายงวด");

        txtOtyBefore.setEditable(false);
        txtOtyBefore.setFont(new java.awt.Font("Norasi", 1, 16));
        txtOtyBefore.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOtyBefore.setFocusable(false);

        txtOtyNow.setEditable(false);
        txtOtyNow.setFont(new java.awt.Font("Norasi", 1, 16));
        txtOtyNow.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOtyNow.setFocusable(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addComponent(txtOtyBefore, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(txtOtyNow, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtOtyBefore, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOtyNow, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(411, 411, 411)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 996, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("รายงานบัญชีคุมสินค้าพิเศษ (Stock Card)", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1014, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1024)/2, (screenSize.height-776)/2, 1024, 776);
    }// </editor-fold>//GEN-END:initComponents

private void cmdProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProcessActionPerformed
    /*
    Thread t = new Thread(){
    public void run(){
    cmdProcess.setEnabled(false);
    cmdProcess();
    cmdProcess.setEnabled(true);
    }
    };
    t.start();
     * */
    cmdProcess();
}//GEN-LAST:event_cmdProcessActionPerformed

private void cmdProcessKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdProcessKeyPressed
}//GEN-LAST:event_cmdProcessKeyPressed

private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed

month = new GregorianCalendar(Integer.parseInt(cbYear.getSelectedItem().toString()), DateAndTime.convertStringToNumber(cbMonth.getSelectedItem().toString()) - 1, 1);
        int index = GetActionMon(month.getTime());
        System.out.println("BQTY" + index);
        String sql = "";
        if (index > 0 && index <= 24) {
            pcode1 = txtPcode1.getText().trim();
            pcode2 = txtPcode2.getText().trim();
            group1 = txtGroupFile1.getText().trim();
            group2 = txtGroupFile2.getText().trim();
            stock = txtStockFile.getText().trim();
            Thread t = new Thread() {

                public void run() {
                    getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                }
            };
            t.start();
            try {
                ViewReport report = new ViewReport();
                String header = "รายงานบัญชีคุมสินค้า (Stock Card) ประจำงวดเดือน ";
                utilities.convertToChar convert = new utilities.convertToChar();
                String month = convert.convertMonthtoChar(cbMonth.getSelectedItem().toString());
                month += " " + cbYear.getSelectedItem().toString();
                sql = "select pcode,pdesc,PUnit1,PPrice11,PLCost,groupCode,groupName,S_Date," +
                        "S_No,S_In,S_Out,S_InCost,S_OutCost,S_Stk,S_Rem," + "BQTY" + (index - 1) + " as qty1," + "BQTY" + index + " as qty2 " +
                        " FROM  product left join stcard on product.PCode = stcard.S_PCode " +
                        " left join groupfile on product.PGroup = groupfile.GroupCode" +
                        " left join stkfile on product.pcode = stkfile.bpCode  ";
               

        String timer = cbYear.getSelectedItem().toString() + "-" + cbMonth.getSelectedItem().toString().toString();

        sqltoReport = "WHERE (s_date like '%" + timer + "%')  and pstock ='Y' AND pactive ='Y'";

        if (!stock.equals("")) {           
            sqltoReport += " AND bstk = '" + stock + "'";
        }

        if (pcode1.equals("") && pcode2.equals("")) {
           
        } else if (!pcode1.equals("") && pcode2.equals("")) {            
            sqltoReport += " AND (pcode >='" + pcode1 + "')";
        } else {          
            sqltoReport += " AND (pcode between '" + pcode1 + "' AND '" + pcode2 + "')";
        }

        if (group1.equals("") && group2.equals("")) {
          
        } else if (!group1.equals("") && group2.equals("")) {          
            sqltoReport += " AND (pgroup >='" + group1 + "')";
        } else {           
            sqltoReport += " AND (pgroup between '" + group1 + "' AND '" + group2 + "')";
        }

                sql += sqltoReport + " Order by groupCode,pcode,s_date";
                System.out.println("sqlstockCard: " + sql);
                report.printStockCard(sql, header + month);
                getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                t.stop();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "วันที่ไม่ได้อยู่ในการจัดเก็บ Stock  ");
        }
    
}//GEN-LAST:event_cmdPrintActionPerformed

private void cmdPrintKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdPrintKeyReleased
}//GEN-LAST:event_cmdPrintKeyReleased

private void cmdPcode1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPcode1ActionPerformed
    Jdi_Inv_product jbpa = new Jdi_Inv_product(new NimbusFrame(), true);
    jbpa.setLocation(cmdPcode1.getLocationOnScreen());
    jbpa.setVisible(true);
    if (jbpa.getDataRecord() != null) {
        txtPcode1.setText(jbpa.getDataRecord().getPcode());
    }
}//GEN-LAST:event_cmdPcode1ActionPerformed

private void cmdPcode2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPcode2ActionPerformed
    Jdi_Inv_product jbpa = new Jdi_Inv_product(new NimbusFrame(), true);
    jbpa.setLocation(cmdPcode2.getLocationOnScreen());
    jbpa.setVisible(true);
    if (jbpa.getDataRecord() != null) {
        txtPcode2.setText(jbpa.getDataRecord().getPcode());
    }
}//GEN-LAST:event_cmdPcode2ActionPerformed

private void cmdGroup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGroup1ActionPerformed
    jdi_showgroupfile js = new jdi_showgroupfile(new NimbusFrame(), true);
    js.setLocation(cmdGroup1.getLocationOnScreen());
    js.setVisible(true);
    try {
        txtGroupFile1.setText(js.getValueFromShowGroupFile()[0]);
    } catch (NullPointerException ex) {
    }
}//GEN-LAST:event_cmdGroup1ActionPerformed

private void cmdGroup2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGroup2ActionPerformed
    jdi_showgroupfile js = new jdi_showgroupfile(new NimbusFrame(), true);
    js.setLocation(cmdGroup2.getLocationOnScreen());
    js.setVisible(true);
    try {
        txtGroupFile2.setText(js.getValueFromShowGroupFile()[0]);
    } catch (NullPointerException ex) {
    }
}//GEN-LAST:event_cmdGroup2ActionPerformed

private void cmdStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdStockActionPerformed
    Jdi_browse_stockfile jbs = new Jdi_browse_stockfile(new NimbusFrame(), true);
    jbs.setLocation(cmdStock.getLocationOnScreen());
    jbs.setVisible(true);
    if (jbs.getDataRecord() != null) {
        txtStockFile.setText(jbs.getDataRecord().getStkcode());
        lbStockFile.setText(jbs.getDataRecord().getStkname());
    }
}//GEN-LAST:event_cmdStockActionPerformed

private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
    if (tblProduct.getRowCount() != 0) {
        try {
            loadDataToTblStkcard(getStkcardSQL());
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}//GEN-LAST:event_tblProductMouseClicked

private void tblProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblProductKeyReleased
    if (evt.getKeyCode() == evt.VK_UP || evt.getKeyCode() == evt.VK_DOWN) {
        if (tblProduct.getRowCount() != 0) {
            try {
                loadDataToTblStkcard(getStkcardSQL());
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }
}//GEN-LAST:event_tblProductKeyReleased

private void txtPcode1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPcode1FocusGained
 
}//GEN-LAST:event_txtPcode1FocusGained

private void txtPcode2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPcode2FocusGained

}//GEN-LAST:event_txtPcode2FocusGained

private void txtGroupFile1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGroupFile1FocusGained
 
}//GEN-LAST:event_txtGroupFile1FocusGained

private void txtGroupFile2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGroupFile2FocusGained

}//GEN-LAST:event_txtGroupFile2FocusGained

private void txtStockFileFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStockFileFocusGained
  
}//GEN-LAST:event_txtStockFileFocusGained

private void txtPcode1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPcode1KeyReleased
    
}//GEN-LAST:event_txtPcode1KeyReleased

private void txtPcode2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPcode2KeyReleased
   
}//GEN-LAST:event_txtPcode2KeyReleased

private void txtGroupFile1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroupFile1KeyReleased
    
}//GEN-LAST:event_txtGroupFile1KeyReleased

private void txtGroupFile2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroupFile2KeyReleased
    
    
}//GEN-LAST:event_txtGroupFile2KeyReleased

private void txtStockFileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockFileKeyReleased
   
}//GEN-LAST:event_txtStockFileKeyReleased

private void cbMonthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbMonthKeyReleased
    
}//GEN-LAST:event_cbMonthKeyReleased

private void cbYearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbYearKeyReleased
    
}//GEN-LAST:event_cbYearKeyReleased

private void cbMonthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbMonthKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    }  
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        cbYear.requestFocus();
    }  
    if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        this.dispose();
    }
}//GEN-LAST:event_cbMonthKeyPressed

private void cbYearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbYearKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtPcode1.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        this.dispose();
    }
}//GEN-LAST:event_cbYearKeyPressed

private void txtPcode1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPcode1KeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        cmdPcode1ActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtPcode2.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        this.dispose();
    }
}//GEN-LAST:event_txtPcode1KeyPressed

private void txtPcode2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPcode2KeyPressed
// TODO add your handling code here:
     if (evt.getKeyCode() == KeyEvent.VK_F1) {
        cmdPcode2ActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtGroupFile1.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        this.dispose();
    }

}//GEN-LAST:event_txtPcode2KeyPressed

private void txtGroupFile1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroupFile1KeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        cmdGroup1ActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtGroupFile2.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        this.dispose();
    }
}//GEN-LAST:event_txtGroupFile1KeyPressed

private void txtGroupFile2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGroupFile2KeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_F1) {
        cmdGroup2ActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtStockFile.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        this.dispose();
    }
}//GEN-LAST:event_txtGroupFile2KeyPressed

private void txtStockFileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockFileKeyPressed
// TODO add your handling code here:
     if (evt.getKeyCode() == KeyEvent.VK_F1) {
        cmdStockActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        cmdProcessActionPerformed(new ActionEvent(new Object(), 0, "0"));
    } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        txtPcode1.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        this.dispose();
    }
}//GEN-LAST:event_txtStockFileKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Jdi_report_stockcard_all dialog = new Jdi_report_stockcard_all(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbMonth;
    private javax.swing.JComboBox cbYear;
    private javax.swing.JButton cmdGroup1;
    private javax.swing.JButton cmdGroup2;
    private javax.swing.JButton cmdPcode1;
    private javax.swing.JButton cmdPcode2;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdProcess;
    private javax.swing.JButton cmdStock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbStockFile;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTable tblStkcard;
    private javax.swing.JTextField txtGroupFile1;
    private javax.swing.JTextField txtGroupFile2;
    private javax.swing.JTextField txtIn;
    private javax.swing.JTextField txtIncost;
    private javax.swing.JTextField txtOtyBefore;
    private javax.swing.JTextField txtOtyNow;
    private javax.swing.JTextField txtOut;
    private javax.swing.JTextField txtOutcost;
    private javax.swing.JTextField txtPcode1;
    private javax.swing.JTextField txtPcode2;
    private javax.swing.JTextField txtProCount;
    private javax.swing.JTextField txtStkCount;
    private javax.swing.JTextField txtStockFile;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel modelPro;
    private DefaultTableModel modelStk;
    SimpleDateFormat dateFmtShow = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
    SimpleDateFormat dateFmtSQL = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    DecimalFormat IntegerFmt = new DecimalFormat("##,###,##0");
    DecimalFormat FloatFmt = new DecimalFormat("##,###,##0.00");
    private static Calendar month;
    private static String pcode1,  pcode2,  group1,  group2,  stock;
    private static String pcodeStk;

    private void cmdProcess() {
        //new dbUtility().dbconnect();

        month = new GregorianCalendar(Integer.parseInt(cbYear.getSelectedItem().toString()), DateAndTime.convertStringToNumber(cbMonth.getSelectedItem().toString()) - 1, 1);
        int index = GetActionMon(month.getTime());
        System.out.println("BQTY" + index);

        if (index > 0 && index <= 24) {
            pcode1 = txtPcode1.getText().trim();
            pcode2 = txtPcode2.getText().trim();
            group1 = txtGroupFile1.getText().trim();
            group2 = txtGroupFile2.getText().trim();
            stock = txtStockFile.getText().trim();

            try {
                loadDataToTblProduct(getProductSQL());
                if (tblProduct.getRowCount() != 0) {
                    loadDataToTblStkcard(getStkcardSQL());
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "วันที่ไม่ได้อยู่ในการจัดเก็บ Stock  ");
        }
    }

    private int GetActionMon(Date EndofdayDate) {
        int RetVal = 0;
        SimpleDateFormat XYear = new SimpleDateFormat("yyyy", Locale.ENGLISH);
        SimpleDateFormat XMonth = new SimpleDateFormat("MM", Locale.ENGLISH);
        try {
            Statement stmt = (Statement) MySQLConnect.con.createStatement();
            String LoadTableFile = "select *from company";
            ResultSet rec = stmt.executeQuery(LoadTableFile);
            rec.first();
            if (rec.getRow() == 0) {
            } else {
                String TempYear = XYear.format(rec.getDate("accterm"));
                String TempMonth = XMonth.format(rec.getDate("accterm"));
                String CurYear = XYear.format(EndofdayDate);
                String CurMonth = XMonth.format(EndofdayDate);
                if (TempYear.equals(CurYear)) {
                    RetVal = Integer.parseInt(CurMonth) + 12;
                } else {
                    if (Integer.parseInt(CurYear) == Integer.parseInt(TempYear) - 1) {
                        RetVal = Integer.parseInt(CurMonth);
                    } else {
                        RetVal = 0;
                    }
                }
            }
            rec.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        return RetVal;
    }

    private ResultSet getProductSQL() throws SQLException {

        Calendar endMonth = (Calendar) month.clone();

        endMonth.set(Calendar.DAY_OF_MONTH, month.getMaximum(Calendar.DAY_OF_MONTH));


        String sql;

        sql = "SELECT *" +
                " FROM product p" +
                " LEFT JOIN groupfile g ON (p.pgroup = g.groupcode)" +
                " LEFT JOIN stkfile st ON (p.pcode = st.bpcode)" +
                " WHERE pstock ='Y' AND pactive ='Y'";
        String timer = cbYear.getSelectedItem().toString() + "-" + cbMonth.getSelectedItem().toString().toString();

       

        if (!stock.equals("")) {
            sql += " AND bstk = '" + stock + "'";
            
        }

        if (pcode1.equals("") && pcode2.equals("")) {
            sql = sql;
        } else if (!pcode1.equals("") && pcode2.equals("")) {
            sql += " AND (pcode >='" + pcode1 + "')";
            
        } else {
            sql += " AND (pcode between '" + pcode1 + "' AND '" + pcode2 + "')";
            
        }

        if (group1.equals("") && group2.equals("")) {
            sql = sql;
        } else if (!group1.equals("") && group2.equals("")) {
            sql += " AND (pgroup >='" + group1 + "')";
           
        } else {
            sql += " AND (pgroup between '" + group1 + "' AND '" + group2 + "')";
            
        }

        sql += " Order by pcode";

       
        return MySQLConnect.con.createStatement().executeQuery(sql);
    }

    private ResultSet getStkcardSQL() throws SQLException {
        pcodeStk = tblProduct.getValueAt(tblProduct.getSelectedRow(), 0).toString();
        Calendar endMonth = (Calendar) month.clone();
        endMonth.set(Calendar.DAY_OF_MONTH, month.getMaximum(Calendar.DAY_OF_MONTH));

        String sql = "SELECT * " +
                "FROM stcard " +
                "WHERE " +
                "s_pcode='" + pcodeStk + "'" +
                " AND (s_date BETWEEN '" + dateFmtSQL.format(month.getTime()) + "' AND '" +
                dateFmtSQL.format(endMonth.getTime()) + "')";


        if (!stock.equals("")) {
            sql += " AND s_stk = '" + stock + "'";
        }


        lbl1.setText(pcodeStk);
        lbl2.setText((String) tblProduct.getValueAt(tblProduct.getSelectedRow(), 2));
        lbl3.setText("");
        System.out.println("Detail := " + sql);

        return MySQLConnect.con.createStatement().executeQuery(sql);
    }

    private void loadDataToTblProduct(ResultSet rs) {
        resetTableModel(modelPro);
        try {
            String[] row = new String[tblProduct.getColumnCount()];
            int i = 0;
            while (rs.next()) {
                row[0] = rs.getString("pcode");
                row[1] = rs.getString("groupcode");
                row[2] = rs.getString("pdesc");
                row[3] = rs.getString("groupname");
                modelPro.addRow(row);
                txtProCount.setText(IntegerFmt.format(++i) + " รายการ");
            }

            if (tblProduct.getRowCount() != 0) {
                tblProduct.setRowSelectionInterval(0, 0);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void loadDataToTblStkcard(ResultSet rs) {
        resetTableModel(modelStk);
        try {
            String[] row = new String[tblStkcard.getColumnCount()];
            int i = 0;
            int sum_sIn = 0;
            int sum_sOut = 0;
            float sum_sIncost = 0;
            float sum_sOutcost = 0;
            while (rs.next()) {
                row[0] = dateFmtShow.format(rs.getDate("s_date"));
                row[1] = rs.getString("s_no");
                row[2] = rs.getString("s_stk");
                row[3] = IntegerFmt.format(rs.getFloat("s_in"));
                row[4] = FloatFmt.format(rs.getFloat("s_incost"));
                row[5] = IntegerFmt.format(rs.getFloat("s_out"));
                row[6] = FloatFmt.format(rs.getFloat("s_outcost"));
                row[7] = rs.getString("s_rem");
                row[8] = rs.getString("s_user");
                row[9] = dateFmtShow.format(rs.getDate("s_entrydate"));
                row[10] = rs.getString("s_entrytime");
                modelStk.addRow(row);

                txtStkCount.setText(IntegerFmt.format(++i) + " รายการ");

                sum_sIn += rs.getFloat("s_in");
                sum_sOut += rs.getFloat("s_out");
                sum_sIncost += rs.getFloat("s_incost");
                sum_sOutcost += rs.getFloat("s_outcost");
            }
            if (tblStkcard.getRowCount() != 0) {
                tblStkcard.setRowSelectionInterval(0, 0);
            }
            txtIn.setText(IntegerFmt.format(sum_sIn));
            txtIncost.setText(FloatFmt.format(sum_sIncost));
            txtOut.setText(IntegerFmt.format(sum_sOut));
            txtOutcost.setText(FloatFmt.format(sum_sOutcost));

        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        int index = GetActionMon(month.getTime());
        if (index >= 0 && index <= 24) {
            String sql = "SELECT * FROM stkfile" +
                    " WHERE bpCode ='" + pcodeStk + "' ";

            if (!stock.equals("")) {
                sql += " AND bstk = '" + stock + "'";
            }
            System.out.println(" GetActionMon := BQTY" + index + "\n\tStkfile :=" + sql + "\n");
            try {
                rs = MySQLConnect.con.createStatement().executeQuery(sql);
                if (rs.next()) {
                    txtOtyBefore.setText(FloatFmt.format(rs.getFloat("bqty" + (index - 1))));
                    txtOtyNow.setText(FloatFmt.format(rs.getFloat("bqty" + index)));
                } else {
                    txtOtyBefore.setText("ERROR DATA");
                    txtOtyNow.setText("ERROR DATA");
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }

        }
    }

    void resetTableModel(DefaultTableModel model) {
        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            model.removeRow(0);
        }
    }

    private void setTableProduct() {
        modelPro = (DefaultTableModel) tblProduct.getModel();
        tblProduct.setShowGrid(true);
        tblProduct.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblProduct.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblProduct.setRowSelectionAllowed(true);
        tblProduct.setShowGrid(true);
        tblProduct.setBackground(Color.WHITE);
        tblProduct.setGridColor(Color.LIGHT_GRAY);

        JTableHeader header = tblProduct.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblProduct.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblProduct.setRowHeight(25);

        //Setting column size
        TableColumn column = null;
        int[] colSize = {90, 90, 250, 250};
        tblProduct.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < tblProduct.getColumnCount(); i++) {
            column = tblProduct.getColumnModel().getColumn(i);
            column.setPreferredWidth(colSize[i]);
        }

        TableColumnModel tcm = tblProduct.getColumnModel();

        DefaultTableCellRenderer d;

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.LEADING);
        tcm.getColumn(0).setCellRenderer(d);
        tcm.getColumn(1).setCellRenderer(d);
        tcm.getColumn(2).setCellRenderer(d);
        tcm.getColumn(3).setCellRenderer(d);


    }

    private void setTableStkfile() {
        modelStk = (DefaultTableModel) tblStkcard.getModel();

        tblStkcard.setShowGrid(true);
        tblStkcard.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblStkcard.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblStkcard.setRowSelectionAllowed(true);
        tblStkcard.setShowGrid(true);
        tblStkcard.setBackground(Color.WHITE);
        tblStkcard.setGridColor(Color.LIGHT_GRAY);

        JTableHeader header = tblStkcard.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblStkcard.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblStkcard.setRowHeight(25);

        //Setting column size
        TableColumn column = null;
        int[] colSize = {80, 125, 50, 60, 100, 60, 100, 60, 100, 100, 100};
        tblStkcard.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < tblStkcard.getColumnCount(); i++) {
            column = tblStkcard.getColumnModel().getColumn(i);
            column.setPreferredWidth(colSize[i]);
        }
        TableColumnModel tcm = tblStkcard.getColumnModel();

        TableTestFormatRenderer r;
        DefaultTableCellRenderer d;

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.LEADING);
        tcm.getColumn(0).setCellRenderer(d);
        tcm.getColumn(1).setCellRenderer(d);
        tcm.getColumn(8).setCellRenderer(d);


        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(2).setCellRenderer(d);
        tcm.getColumn(7).setCellRenderer(d);
        tcm.getColumn(9).setCellRenderer(d);
        tcm.getColumn(10).setCellRenderer(d);



        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(3).setCellRenderer(d);
        tcm.getColumn(4).setCellRenderer(d);
        tcm.getColumn(5).setCellRenderer(d);
        tcm.getColumn(6).setCellRenderer(d);

    }

    private void setYear() {
        Calendar today = Calendar.getInstance();
        SimpleDateFormat dateYearFmt = new SimpleDateFormat("yyyy", Locale.ENGLISH);

        DefaultComboBoxModel cbm = (DefaultComboBoxModel) cbYear.getModel();
        int size = cbm.getSize();
        for (int i = 0; i < size; i++) {
            cbm.removeElementAt(0);
        }

        Calendar past = (Calendar) today.clone();
        past.set(Calendar.YEAR, 2000);
        Vector<String> temp = new Vector<String>();
        for (int i = 0; past.compareTo(today) <= 0; i++) {
            temp.add(dateYearFmt.format(past.getTime()));
            past.add(Calendar.YEAR, 1);
        }

        for (int i = temp.size() - 1; i > -1; i--) {
            cbm.addElement(temp.get(i));
        }
        /// add for set month ///////
        SimpleDateFormat DateFmt = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
        Date date = new Date() ;
        String tdate = DateFmt.format(date) ;
        Calendar ca2 = new GregorianCalendar() ;
        int dd = Integer.parseInt(tdate.substring(0, 2)) ;
        int mm = Integer.parseInt(tdate.substring(3, 5)) ;
        int yy = Integer.parseInt(tdate.substring(6, 10)) ;
        cbMonth.setSelectedIndex(mm-1);
    }
}
