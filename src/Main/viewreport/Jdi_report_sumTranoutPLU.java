/*
 * Jdi_report_recive.java
 *
 * Created on June 9, 2009, 4:49 PM
 */

package Main.viewreport;


import DBcontrol.MySQLConnect;
import Bean.FactoryBean;
import program.PUtility;
import Main.browser.Jdi_browse_factory;
import Main.browser.Jdi_browse_productAll;
import Main.browser.jdi_browseBranchFile;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import utilities.LookAndFeelFrame;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import report.SnpReport;
import utilities.Format;
import utilities.NimbusFrame;
import utilities.TableTestFormatRenderer;
import utilities.date_time.DateUtilities;

/**
 *
 * @author  root
 */
public class Jdi_report_sumTranoutPLU extends javax.swing.JDialog {
 
    /** Creates new form Jdi_report_recive */
    public Jdi_report_sumTranoutPLU(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.DAY_OF_MONTH,1);
        txt1.setText(Format.dateFmtShow.format(cal.getTime()));
        cal.set(Calendar.DAY_OF_MONTH, DateUtilities.getMaxDay( (GregorianCalendar) cal ));
        txt2.setText(Format.dateFmtShow.format(cal.getTime())); 
        
        setTableHeader();
        setTableDetail();
        setTableHeaderBran();
        
        report = new SnpReport();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txt1 = new javax.swing.JFormattedTextField();
        txt2 = new javax.swing.JFormattedTextField();
        cmdDateChoose1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmdDateChoose2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtPcode1 = new javax.swing.JFormattedTextField();
        txtPcode2 = new javax.swing.JFormattedTextField();
        cmdProductChoose3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cmdProductChoose4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        txtPbran1 = new javax.swing.JFormattedTextField();
        txtPbran2 = new javax.swing.JFormattedTextField();
        cmdBranchChoose1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cmdBranchChoose2 = new javax.swing.JButton();
        cmdProcess = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btn_exit = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetail = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHeader = new javax.swing.JTable();
        txtHlist = new javax.swing.JTextField();
        txtAmt = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        cmdPrint = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPage2 = new javax.swing.JTable();
        cmdPrint1 = new javax.swing.JButton();
        txtAmt1 = new javax.swing.JTextField();
        txtQty1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtHlist1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("สรุปการโอนสินค้า (ออก) ตามรหัสสินค้า");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(254, 234, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel2.setText("กำหนดช่วงวันที่");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setFont(new java.awt.Font("Norasi", 0, 14));

        txt1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txt1.setFont(new java.awt.Font("Norasi", 0, 14));
        txt1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt1FocusGained(evt);
            }
        });
        txt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt1KeyPressed(evt);
            }
        });

        txt2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txt2.setFont(new java.awt.Font("Norasi", 0, 14));
        txt2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt2FocusGained(evt);
            }
        });
        txt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt2KeyPressed(evt);
            }
        });

        cmdDateChoose1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar.png"))); // NOI18N
        cmdDateChoose1.setFocusable(false);
        cmdDateChoose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateChoose1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel1.setText("ถึง");

        cmdDateChoose2.setFont(new java.awt.Font("Norasi", 0, 14));
        cmdDateChoose2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar.png"))); // NOI18N
        cmdDateChoose2.setFocusable(false);
        cmdDateChoose2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateChoose2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdDateChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdDateChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cmdDateChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addComponent(cmdDateChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setFont(new java.awt.Font("Norasi", 0, 14));

        txtPcode1.setFont(new java.awt.Font("Norasi", 0, 14));
        txtPcode1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPcode1FocusGained(evt);
            }
        });
        txtPcode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPcode1KeyPressed(evt);
            }
        });

        txtPcode2.setFont(new java.awt.Font("Norasi", 0, 14));
        txtPcode2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPcode2FocusGained(evt);
            }
        });
        txtPcode2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPcode2KeyPressed(evt);
            }
        });

        cmdProductChoose3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdProductChoose3.setFocusable(false);
        cmdProductChoose3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProductChoose3ActionPerformed(evt);
            }
        });
        cmdProductChoose3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmdProductChoose3KeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel4.setText("ถึง");

        cmdProductChoose4.setFont(new java.awt.Font("Norasi", 0, 14));
        cmdProductChoose4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdProductChoose4.setFocusable(false);
        cmdProductChoose4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProductChoose4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(txtPcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdProductChoose3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdProductChoose4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(txtPcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cmdProductChoose3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addComponent(txtPcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cmdProductChoose4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel5.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel5.setText("กำหนดช่วงรหัสสินค้า (PLU Code)");

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setFont(new java.awt.Font("Norasi", 0, 14));

        txtPbran1.setFont(new java.awt.Font("Norasi", 0, 14));
        txtPbran1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPbran1FocusGained(evt);
            }
        });
        txtPbran1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPbran1KeyPressed(evt);
            }
        });

        txtPbran2.setFont(new java.awt.Font("Norasi", 0, 14));
        txtPbran2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPbran2FocusGained(evt);
            }
        });
        txtPbran2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPbran2KeyPressed(evt);
            }
        });

        cmdBranchChoose1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdBranchChoose1.setFocusable(false);
        cmdBranchChoose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBranchChoose1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel6.setText("ถึง");

        cmdBranchChoose2.setFont(new java.awt.Font("Norasi", 0, 14));
        cmdBranchChoose2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmdBranchChoose2.setFocusable(false);
        cmdBranchChoose2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBranchChoose2ActionPerformed(evt);
            }
        });

        cmdProcess.setFont(new java.awt.Font("Norasi", 1, 14));
        cmdProcess.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/SandClock.png"))); // NOI18N
        cmdProcess.setText("F5-ประมวณผล");
        cmdProcess.setFocusable(false);
        cmdProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProcessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(txtPbran1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdBranchChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPbran2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdBranchChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdProcess))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(txtPbran2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cmdBranchChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addComponent(cmdBranchChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txtPbran1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cmdProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel8.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel8.setText("กำหนดสาขา");

        btn_exit.setFont(new java.awt.Font("Norasi", 1, 14));
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.gif"))); // NOI18N
        btn_exit.setText("Exit");
        btn_exit.setFocusable(false);
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_exit)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel2.setVerticalAlignment(0);
        jLabel2.setVerticalAlignment(0);
        jLabel2.setVerticalAlignment(0);

        jTabbedPane1.setFont(new java.awt.Font("Norasi", 0, 14));

        tblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "วันที่ (Date)", "เลขที่เอกสาร", "คลัง", "จำนวน", "จำนวนเงิน", "สาขา(Branch Name)", "ผู้บันทึก", "วันที่บันทึก", "เวลาบันทึก"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDetail);

        tblHeader.setFont(new java.awt.Font("Norasi", 0, 14));
        tblHeader.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัสสินค้า (PLU Code)", "ชื่อสินค้า/รายการ", "จำนวน", "หน่วนนับ", "จำนวนเงิน", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHeader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblHeaderMouseReleased(evt);
            }
        });
        tblHeader.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblHeaderKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblHeader);

        txtHlist.setBackground(new java.awt.Color(175, 251, 209));
        txtHlist.setEditable(false);
        txtHlist.setFont(new java.awt.Font("Norasi", 1, 14));
        txtHlist.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHlist.setText("จำนวน 0 รายการ");
        txtHlist.setFocusable(false);
        txtHlist.setRequestFocusEnabled(false);

        txtAmt.setBackground(new java.awt.Color(254, 208, 163));
        txtAmt.setEditable(false);
        txtAmt.setFont(new java.awt.Font("Norasi", 1, 16));
        txtAmt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAmt.setText("0.00");
        txtAmt.setFocusable(false);
        txtAmt.setRequestFocusEnabled(false);

        txtQty.setBackground(new java.awt.Color(254, 208, 163));
        txtQty.setFont(new java.awt.Font("Norasi", 1, 14));
        txtQty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQty.setText("0.00");
        txtQty.setFocusable(false);
        txtQty.setRequestFocusEnabled(false);

        cmdPrint.setFont(new java.awt.Font("Norasi", 1, 14));
        cmdPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print.gif"))); // NOI18N
        cmdPrint.setText("พิมพ์");
        cmdPrint.setFocusable(false);
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel3.setText("จำนวนรวม");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 957, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtHlist, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(150, 150, 150)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                                .addComponent(cmdPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(16, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtHlist, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdPrint))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        jTabbedPane1.addTab("สรุปรายการโอนสินค้า (ออก) ตามรหัสสินค้า (รวมทั้งหมด)", jPanel4);

        tblPage2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัสสาขา", "ชื่อสาขา (Branch Name)", "รหัสสินค้า", "ชื่อสินค้า/รายการ", "จำนวน", "จำนวนเงิน", "หน่วยนับ", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPage2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblPage2KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tblPage2);

        cmdPrint1.setFont(new java.awt.Font("Norasi", 1, 14));
        cmdPrint1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print.gif"))); // NOI18N
        cmdPrint1.setText("พิมพ์");
        cmdPrint1.setFocusable(false);
        cmdPrint1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrint1ActionPerformed(evt);
            }
        });

        txtAmt1.setBackground(new java.awt.Color(254, 208, 163));
        txtAmt1.setEditable(false);
        txtAmt1.setFont(new java.awt.Font("Norasi", 1, 16));
        txtAmt1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAmt1.setText("0.00");
        txtAmt1.setFocusable(false);
        txtAmt1.setRequestFocusEnabled(false);

        txtQty1.setBackground(new java.awt.Color(254, 208, 163));
        txtQty1.setFont(new java.awt.Font("Norasi", 1, 14));
        txtQty1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQty1.setText("0.00");
        txtQty1.setFocusable(false);
        txtQty1.setRequestFocusEnabled(false);

        jLabel7.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel7.setText("จำนวนรวม");

        txtHlist1.setBackground(new java.awt.Color(175, 251, 209));
        txtHlist1.setEditable(false);
        txtHlist1.setFont(new java.awt.Font("Norasi", 1, 14));
        txtHlist1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHlist1.setText("จำนวน 0 รายการ");
        txtHlist1.setFocusable(false);
        txtHlist1.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 956, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtHlist1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(352, 352, 352)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQty1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAmt1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(cmdPrint1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel7)
                    .addComponent(txtHlist1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQty1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAmt1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdPrint1))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("สรุปรายการโอนสินค้า (ออก) ตามรหัสสินค้า (แยกตามสาขา)", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 997, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1024)/2, (screenSize.height-768)/2, 1024, 768);
    }// </editor-fold>//GEN-END:initComponents

private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
    report.sumTranoutPLU1PrintReport(txt1.getText().trim(), txt2.getText().trim(), txtPcode1.getText().trim(), txtPcode2.getText().trim(), txtPbran1.getText().trim(), txtPbran2.getText().trim(), true);
}//GEN-LAST:event_cmdPrintActionPerformed

private void cmdDateChoose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateChoose1ActionPerformed
    cmdDateChoose1();
}//GEN-LAST:event_cmdDateChoose1ActionPerformed

private void cmdDateChoose2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateChoose2ActionPerformed
    cmdDateChoose2();
}//GEN-LAST:event_cmdDateChoose2ActionPerformed

private void cmdProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProcessActionPerformed
    cmdProcess();
    tblDetail.requestFocus();
}//GEN-LAST:event_cmdProcessActionPerformed

private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_formKeyPressed

private void cmdProductChoose3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProductChoose3ActionPerformed
    Jdi_browse_productAll jbpa = new Jdi_browse_productAll(new NimbusFrame(),true);
    jbpa.setLocation(cmdProductChoose3.getLocationOnScreen());
    jbpa.setVisible(true);
    if(jbpa.getDataRecord() != null){
        txtPcode1.setText(jbpa.getDataRecord().getPcode());
    }
}//GEN-LAST:event_cmdProductChoose3ActionPerformed

private void cmdProductChoose3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdProductChoose3KeyPressed
// TODO add your handling code here:
}//GEN-LAST:event_cmdProductChoose3KeyPressed

private void cmdProductChoose4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProductChoose4ActionPerformed
    Jdi_browse_productAll jbpa = new Jdi_browse_productAll(new NimbusFrame(),true);
    jbpa.setLocation(cmdProductChoose4.getLocationOnScreen());
    jbpa.setVisible(true);
    if(jbpa.getDataRecord() != null){
        txtPcode2.setText(jbpa.getDataRecord().getPcode());
    }
}//GEN-LAST:event_cmdProductChoose4ActionPerformed

private void tblHeaderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHeaderMouseReleased
    int index = tblHeader.getSelectedRow();
    if (index != -1) {
        Calendar date1 = null;
        Calendar date2 = null;
    
        if (!(txt1.getText().equals("") || txt2.getText().equals(""))) {
            date1 = new GregorianCalendar();
            date2 = new GregorianCalendar();
            try {
                date1.setTime(Format.dateFmtShow.parse(txt1.getText().trim()));
                date2.setTime(Format.dateFmtShow.parse(txt2.getText().trim()));
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
            
            if(date1 == null || date2==null){
                JOptionPane.showMessageDialog(this, "กรุณาระบุวันที่ให้ถูกต้อง");
                return;
            }
            
            if(date1.compareTo(date2)>0){
                JOptionPane.showMessageDialog(this, "กรุณาระบุวันที่ให้ถูกต้อง");
                return;
            }
        }
        
        String pcode1 = txtPcode1.getText().trim();
        String pcode2 = txtPcode2.getText().trim();
        
        pcode1 = pcode1.equals("") ? "0" : pcode1;
        pcode2 = pcode2.equals("") ? "ZZZZZ" : pcode2;
        
        String pbran1 = txtPbran1.getText().trim();
        String pbran2 = txtPbran2.getText().trim();
        
        pbran1 = pbran1.equals("") ? "0" : pbran1;
        pbran2 = pbran2.equals("") ? "ZZZZZ" : pbran2;
        
        loadDetail(date1,date2,tblHeader.getValueAt(index, 0).toString(),pbran1,pbran2);
    }
}//GEN-LAST:event_tblHeaderMouseReleased

private void tblHeaderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblHeaderKeyPressed
    int key = evt.getKeyCode();
    if(key == evt.VK_ESCAPE){
        txt1.requestFocus();
    }else if (key == evt.VK_UP || key == evt.VK_DOWN || key == evt.VK_ENTER) {
        int index = tblHeader.getSelectedRow();
        if (index != -1) {
            Calendar date1 = null;
            Calendar date2 = null;

            if (!(txt1.getText().equals("") || txt2.getText().equals(""))) {
                date1 = new GregorianCalendar();
                date2 = new GregorianCalendar();
                try {
                    date1.setTime(Format.dateFmtShow.parse(txt1.getText().trim()));
                    date2.setTime(Format.dateFmtShow.parse(txt2.getText().trim()));
                } catch (ParseException ex) {
                    ex.printStackTrace();
                }

                if (date1 == null || date2 == null) {
                    JOptionPane.showMessageDialog(this, "กรุณาระบุวันที่ให้ถูกต้อง");
                    return;
                }

                if (date1.compareTo(date2) > 0) {
                    JOptionPane.showMessageDialog(this, "กรุณาระบุวันที่ให้ถูกต้อง");
                    return;
                }
            }

            String pcode1 = txtPcode1.getText().trim();
            String pcode2 = txtPcode2.getText().trim();

            pcode1 = pcode1.equals("") ? "0" : pcode1;
            pcode2 = pcode2.equals("") ? "ZZZZZ" : pcode2;

            String pbran1 = txtPbran1.getText().trim();
            String pbran2 = txtPbran2.getText().trim();

            pbran1 = pbran1.equals("") ? "0" : pbran1;
            pbran2 = pbran2.equals("") ? "ZZZZZ" : pbran2;

            loadDetail(date1, date2, tblHeader.getValueAt(index, 0).toString(), pbran1, pbran2);
        }
    }
}//GEN-LAST:event_tblHeaderKeyPressed

private void cmdBranchChoose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBranchChoose1ActionPerformed
    jdi_browseBranchFile jbpa = new jdi_browseBranchFile(new NimbusFrame(),true);
    jbpa.setLocation(cmdBranchChoose1.getLocationOnScreen());
    jbpa.setVisible(true);
    if (jbpa.branchSelect != null) {
        txtPbran1.setText(jbpa.branchSelect);
    }
    txtPbran1.requestFocus();
}//GEN-LAST:event_cmdBranchChoose1ActionPerformed

private void cmdBranchChoose2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBranchChoose2ActionPerformed
    jdi_browseBranchFile jbpa = new jdi_browseBranchFile(new NimbusFrame(),true);
    jbpa.setLocation(cmdBranchChoose2.getLocationOnScreen());
    jbpa.setVisible(true);
    if (jbpa.branchSelect != null) {
        txtPbran2.setText(jbpa.branchSelect);
    }
    txtPbran2.requestFocus();
}//GEN-LAST:event_cmdBranchChoose2ActionPerformed

private void cmdPrint1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrint1ActionPerformed
    report.sumTranoutPLU2PrintReport(txt1.getText().trim(), txt2.getText().trim(), txtPcode1.getText().trim(), txtPcode2.getText().trim(), txtPbran1.getText().trim(), txtPbran2.getText().trim(), true);
}//GEN-LAST:event_cmdPrint1ActionPerformed

private void txt1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt1KeyPressed
    if(evt.getKeyCode() == evt.VK_F1){
        cmdDateChoose1();
    }
    else if(evt.getKeyCode() == evt.VK_ENTER){
        txt2.requestFocus();
    }else if(evt.getKeyCode() == evt.VK_ESCAPE){
        dispose();
    }else if (evt.getKeyCode() == evt.VK_F5) {
        cmdProcess();
    }
}//GEN-LAST:event_txt1KeyPressed

private void txt1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt1FocusGained
    if(txt1.getText().trim().equals("")){
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.DAY_OF_MONTH,1);
        txt1.setText(Format.dateFmtShow.format(cal.getTime()));        
    }
    txt1.selectAll();
}//GEN-LAST:event_txt1FocusGained

private void txt2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt2FocusGained
    if(txt2.getText().trim().equals("")){        
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.DAY_OF_MONTH, DateUtilities.getMaxDay( (GregorianCalendar) cal ));
        txt2.setText(Format.dateFmtShow.format(cal.getTime())); 
    }
    if(txt1.getText().trim().equals("")){
        txt1.requestFocus();
    }
    txt2.selectAll();
}//GEN-LAST:event_txt2FocusGained

private void txt2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt2KeyPressed
    if(evt.getKeyCode() == evt.VK_F1){
        cmdDateChoose2();
    }
    else if(evt.getKeyCode() == evt.VK_ENTER){
        txtPcode1.requestFocus();
    }else if(evt.getKeyCode() == evt.VK_ESCAPE){
        dispose();
    }else if (evt.getKeyCode() == evt.VK_F5) {
        cmdProcess();
    }
}//GEN-LAST:event_txt2KeyPressed

private void txtPcode1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPcode1KeyPressed
    if(evt.getKeyCode() == evt.VK_F1){
        cmdProductChoose3ActionPerformed(new ActionEvent(new Object(),0,""));
    }
    else if(evt.getKeyCode() == evt.VK_ENTER){
        txtPcode2.requestFocus();
    }else if(evt.getKeyCode() == evt.VK_ESCAPE){
        dispose();
    }else if (evt.getKeyCode() == evt.VK_F5) {
        cmdProcess();
    }
}//GEN-LAST:event_txtPcode1KeyPressed

private void txtPcode1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPcode1FocusGained
    txtPcode1.selectAll();
}//GEN-LAST:event_txtPcode1FocusGained

private void txtPcode2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPcode2KeyPressed
    if(evt.getKeyCode() == evt.VK_F1){
        cmdProductChoose4ActionPerformed(new ActionEvent(new Object(),0,""));
    }
    else if(evt.getKeyCode() == evt.VK_ENTER){
        txtPbran1.requestFocus();
    }else if(evt.getKeyCode() == evt.VK_ESCAPE){
        dispose();
    }else if (evt.getKeyCode() == evt.VK_F5) {
        cmdProcess();
    }
}//GEN-LAST:event_txtPcode2KeyPressed

private void txtPcode2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPcode2FocusGained
    txtPcode2.selectAll();
}//GEN-LAST:event_txtPcode2FocusGained

private void txtPbran1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPbran1KeyPressed
    if(evt.getKeyCode() == evt.VK_F1){
        cmdBranchChoose1ActionPerformed(new ActionEvent(new Object(),0,""));
    }
    else if(evt.getKeyCode() == evt.VK_ENTER){
        txtPbran2.requestFocus();
    }else if(evt.getKeyCode() == evt.VK_ESCAPE){
        dispose();
    }else if (evt.getKeyCode() == evt.VK_F5) {
        cmdProcess();
    }
}//GEN-LAST:event_txtPbran1KeyPressed

private void txtPbran2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPbran2KeyPressed
    if(evt.getKeyCode() == evt.VK_F1){
        cmdBranchChoose2ActionPerformed(new ActionEvent(new Object(),0,""));
    }
    else if(evt.getKeyCode() == evt.VK_ENTER){
        txt1.requestFocus();
    }else if(evt.getKeyCode() == evt.VK_ESCAPE){
        dispose();
    }else if (evt.getKeyCode() == evt.VK_F5) {
        cmdProcess();
    }
}//GEN-LAST:event_txtPbran2KeyPressed

private void txtPbran1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPbran1FocusGained
    txtPbran1.selectAll();
}//GEN-LAST:event_txtPbran1FocusGained

private void txtPbran2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPbran2FocusGained
    txtPbran2.selectAll();
}//GEN-LAST:event_txtPbran2FocusGained

private void tblPage2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblPage2KeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
        txt1.requestFocus();
    }
}//GEN-LAST:event_tblPage2KeyPressed

private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
    dispose();
}//GEN-LAST:event_btn_exitActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Jdi_report_sumTranoutPLU dialog = new Jdi_report_sumTranoutPLU(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton cmdBranchChoose1;
    private javax.swing.JButton cmdBranchChoose2;
    private javax.swing.JButton cmdDateChoose1;
    private javax.swing.JButton cmdDateChoose2;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdPrint1;
    private javax.swing.JButton cmdProcess;
    private javax.swing.JButton cmdProductChoose3;
    private javax.swing.JButton cmdProductChoose4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblDetail;
    private javax.swing.JTable tblHeader;
    private javax.swing.JTable tblPage2;
    private javax.swing.JFormattedTextField txt1;
    private javax.swing.JFormattedTextField txt2;
    private javax.swing.JTextField txtAmt;
    private javax.swing.JTextField txtAmt1;
    private javax.swing.JTextField txtHlist;
    private javax.swing.JTextField txtHlist1;
    private javax.swing.JFormattedTextField txtPbran1;
    private javax.swing.JFormattedTextField txtPbran2;
    private javax.swing.JFormattedTextField txtPcode1;
    private javax.swing.JFormattedTextField txtPcode2;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtQty1;
    // End of variables declaration//GEN-END:variables
    
    DefaultTableModel modelHeader;
    DefaultTableModel modelDetail;
    DefaultTableModel modelHeaderBran;
    SnpReport report;
    private void resetTableModel(DefaultTableModel model){
        int rowCount = model.getRowCount();
        for(int i=0; i < rowCount; i++){
            model.removeRow(0);
        }
    }
    
    private void setTableHeader(){
        modelHeader = (DefaultTableModel) tblHeader.getModel();
        tblHeader.setShowGrid(true);
        tblHeader.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblHeader.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblHeader.setRowSelectionAllowed(true);
        tblHeader.setShowGrid(true);
        tblHeader.setBackground(Color.WHITE);
        tblHeader.setGridColor(Color.LIGHT_GRAY);
        JTableHeader header = tblHeader.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblHeader.setFont(new java.awt.Font("Norasi" , java.awt.Font.PLAIN ,14));
        tblHeader.setRowHeight(25);
        
        TableColumn column = null;
        int[] colSize = {100, 250, 100,80,100,30};
        tblHeader.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < colSize.length; i++) {
            column = tblHeader.getColumnModel().getColumn(i);
            column.setPreferredWidth(colSize[i]);
        }
        
        
        TableColumnModel tcm = tblHeader.getColumnModel();
        
        DefaultTableCellRenderer d;
        
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.LEADING);
        tcm.getColumn(0).setCellRenderer(d);
        tcm.getColumn(1).setCellRenderer(d);
        tcm.getColumn(5).setCellRenderer(d);
        tcm.getColumn(3).setCellRenderer(d);
  
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(4).setCellRenderer(d);
        tcm.getColumn(2).setCellRenderer(d);
    } 
    private void setTableDetail(){
        modelDetail = (DefaultTableModel) tblDetail.getModel();
        tblDetail.setShowGrid(true);
        tblDetail.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblDetail.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblDetail.setRowSelectionAllowed(true);
        tblDetail.setShowGrid(true);
        tblDetail.setBackground(Color.WHITE);
        tblDetail.setGridColor(Color.LIGHT_GRAY);
        JTableHeader header = tblDetail.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblDetail.setFont(new java.awt.Font("Norasi" , java.awt.Font.PLAIN ,14));
        tblDetail.setRowHeight(25);
        
        TableColumn column = null;
        int[] colSize = {90, 130, 50,100,100,270,80,80,80};
        tblDetail.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < colSize.length; i++) {
            column = tblDetail.getColumnModel().getColumn(i);
            column.setPreferredWidth(colSize[i]);
        }
        
       
        TableColumnModel tcm = tblDetail.getColumnModel();
        
        TableTestFormatRenderer r;
        DefaultTableCellRenderer d;
        
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.LEADING);
        tcm.getColumn(1).setCellRenderer(d);
        tcm.getColumn(5).setCellRenderer(d);
        
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(0).setCellRenderer(d);
        tcm.getColumn(2).setCellRenderer(d);
        tcm.getColumn(6).setCellRenderer(d);
        tcm.getColumn(7).setCellRenderer(d);
        tcm.getColumn(8).setCellRenderer(d);

        
                
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(3).setCellRenderer(d);
        tcm.getColumn(4).setCellRenderer(d);
        
        
    }
    
    private void setTableHeaderBran(){
        modelHeaderBran = (DefaultTableModel) tblPage2.getModel();
        tblPage2.setShowGrid(true);
        tblPage2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblPage2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblPage2.setRowSelectionAllowed(true);
        tblPage2.setShowGrid(true);
        tblPage2.setBackground(Color.WHITE);
        tblPage2.setGridColor(Color.LIGHT_GRAY);
        JTableHeader header = tblPage2.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblPage2.setFont(new java.awt.Font("Norasi" , java.awt.Font.PLAIN ,14));
        tblPage2.setRowHeight(25);
        
        TableColumn column = null;
        int[] colSize = {100,150, 100,200,100,80,100,10};
        tblPage2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < colSize.length; i++) {
            column = tblPage2.getColumnModel().getColumn(i);
            column.setPreferredWidth(colSize[i]);
        }
        
        
        TableColumnModel tcm = tblPage2.getColumnModel();
        
        DefaultTableCellRenderer d;
        
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.LEADING);
        tcm.getColumn(0).setCellRenderer(d);
        tcm.getColumn(1).setCellRenderer(d);
        tcm.getColumn(2).setCellRenderer(d);
        tcm.getColumn(3).setCellRenderer(d);
        tcm.getColumn(5).setCellRenderer(d);
        
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(4).setCellRenderer(d);
        tcm.getColumn(6).setCellRenderer(d);
    }
    
    ////////////////////////////// CMD /////////////////////////////////////////
    private void cmdDateChoose1(){
        Point point = cmdDateChoose1.getLocationOnScreen();
        utilities.DateChooser.DateChooserDialog dcd = new utilities.DateChooser.DateChooserDialog(null,true,point);
        dcd.setVisible(true);
        txt1.setText(Format.dateFmtShow.format(dcd.getSelectedDate().getTime()));
        txt1.requestFocus();
    }
    private void cmdDateChoose2(){
        
        Point point = cmdDateChoose2.getLocationOnScreen();
        utilities.DateChooser.DateChooserDialog dcd = new utilities.DateChooser.DateChooserDialog(null,true,point);
        dcd.setVisible(true);
        txt2.setText(Format.dateFmtShow.format(dcd.getSelectedDate().getTime()));
        txt2.requestFocus();
    }
    private void cmdProcess(){
        
        resetTableModel(modelHeader);
        resetTableModel(modelDetail);
        resetTableModel(modelHeaderBran);
        
        Calendar date1 = null;
        Calendar date2 = null;
    
        if (!(txt1.getText().equals("") || txt2.getText().equals(""))) {
            date1 = new GregorianCalendar();
            date2 = new GregorianCalendar();
            try {
                date1.setTime(Format.dateFmtShow.parse(txt1.getText().trim()));
                date2.setTime(Format.dateFmtShow.parse(txt2.getText().trim()));
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
            
            if(date1 == null || date2==null){
                JOptionPane.showMessageDialog(this, "กรุณาระบุวันที่ให้ถูกต้อง");
                return;
            }
            
            if(date1.compareTo(date2)>0){
                JOptionPane.showMessageDialog(this, "กรุณาระบุวันที่ให้ถูกต้อง");
                return;
            }
        }
        
        String pcode1 = txtPcode1.getText().trim();
        String pcode2 = txtPcode2.getText().trim();
        
        pcode1 = pcode1.equals("") ? "0" : pcode1;
        pcode2 = pcode2.equals("") ? "ZZZZZ" : pcode2;
        
        String pbran1 = txtPbran1.getText().trim();
        String pbran2 = txtPbran2.getText().trim();
        
        pbran1 = pbran1.equals("") ? "0" : pbran1;
        pbran2 = pbran2.equals("") ? "ZZZZZ" : pbran2;
        
        pageOne(date1,date2,pcode1,pcode2,pbran1,pbran2);
        pageTwo(date1,date2,pcode1,pcode2,pbran1,pbran2);
    }
    
    private void pageOne(Calendar date1, Calendar date2, String pcode1 , String pcode2, String pbran1,String pbran2){  
        showRecordToTableHeaderAll(getRecordHeaderAll(date1, date2, pcode1,pcode2,pbran1,pbran2));

        if(tblHeader.getRowCount() != 0){
            tblHeader.setRowSelectionInterval(0, 0);
            loadDetail(date1,date2,(String)tblHeader.getValueAt(0, 0),pbran1,pbran2);
        }
    }
    private void pageTwo(Calendar date1, Calendar date2, String pcode1 , String pcode2, String pbran1,String pbran2){  
        showRecordToTableHeaderBran(getRecordHeaderBran(date1, date2, pcode1,pcode2,pbran1,pbran2));

        
    }
    private boolean searchFacF1Dialog(JTextField txt){
        Jdi_browse_factory rsd = new Jdi_browse_factory(new NimbusFrame(),true);
        rsd.setVisible(true);
        FactoryBean hrb = rsd.getDataRecord();
        if (hrb != null) {
            txt.setText(hrb.getFactorycode());
            return true;
        }else{
            txt.requestFocus();
            return false;
        }
    }  
    
    ////////////////////////////////////////////////////////////////////////////
    
    ///////////////////////// Event ////////////////////////////////////////////
    
    ////////////////////////////////////////////////////////////////////////////
  
    private ResultSet getRecordHeaderAll(Calendar date1, Calendar date2, String pcode1 , String pcode2, String pbran1,String pbran2)  {
        String sql = "SELECT TranOut.R_PCode, SUM( TranOut.R_Qty ), SUM( TranOut.R_Amount ), TranOut.R_No, TranOut.R_Post, TranOut.R_Que, TranOut.R_Stock, HtranOut.R_No, HtranOut.R_Date, HtranOut.R_Bran ,Product.pdesc,Product.punit1" +
                    " FROM tranout TranOut left JOIN htranout HtranOut " +
                    " ON  (TranOut.R_No = HtranOut.R_No)" +
                    " left JOIN product Product " +
                    " ON (TranOut.r_pcode = Product.pcode)" +
                    " WHERE  (TranOut.R_Post = 'Y') and " +
                    " (HtranOut.R_Date>='"+Format.dateFmtSql.format(date1.getTime())+"') and (HtranOut.R_Date<='"+Format.dateFmtSql.format(date2.getTime())+"') and" +
                    " (TranOut.R_PCode>='"+pcode1+"') and (TranOut.R_PCode<='"+pcode2+"') and " +
                    " (HtranOut.R_Bran>='"+pbran1+"') and (HtranOut.R_Bran<='"+pbran2+"')" +
                    " GROUP BY TranOut.R_PCode" +
                    " ORDER BY TranOut.R_PCode";
        try {
            System.out.println("Header := "+sql);    
            return MySQLConnect.con.createStatement().executeQuery(sql);
        } catch (SQLException ex) {
            ex.printStackTrace();
            return null;
        }
    }
    private void showRecordToTableHeaderAll (ResultSet rs){
        if(rs!=null){
            double sumQty = 0;
            BigDecimal sumAmt = new BigDecimal("0");
            try {
                while (rs.next()) {
                    String[] row = new String[tblHeader.getColumnCount()];
                    row[0] = rs.getString("r_pcode");      
                    row[1] = rs.getString("pdesc");
                    row[2] = Format.qtyFmt.format(rs.getDouble("SUM( TranOut.R_Qty )"));
                    row[3] = rs.getString("punit1") ;
                    row[4] = Format.doubleFmt.format(rs.getFloat("SUM( TranOut.R_Amount )"));
                    
                    modelHeader.addRow(row);
                    double qty = rs.getDouble("SUM( TranOut.R_Qty )");
                    sumQty += qty;
                    BigDecimal amt = new BigDecimal(String.valueOf(rs.getFloat("SUM( TranOut.R_Amount )")));
                    sumAmt = sumAmt.add(amt);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,ex);
                ex.printStackTrace();
            }
            
            txtQty.setText(Format.qtyFmt.format(sumQty));
            txtAmt.setText(Format.doubleFmt.format(sumAmt.doubleValue()));
            txtHlist.setText("จำนวน "+tblHeader.getRowCount()+" รายการ");
        }
    }
    
    private void loadDetail(Calendar date1, Calendar date2, String pcode, String pbran1,String pbran2 ){
        resetTableModel(modelDetail);

        String sql = "SELECT DISTINCT TranOut.R_No, TranOut.R_Que, TranOut.R_PCode, TranOut.R_Stock, TranOut.R_Pack, TranOut.R_Qty, TranOut.R_Post, TranOut.R_Unit, TranOut.R_Cost, TranOut.R_Amount, TranOut.R_TotalQty, TranOut.R_User, TranOut.R_Time, TranOut.R_EntryDate, HtranOut.R_No, HtranOut.R_Date, HtranOut.R_Remark, HtranOut.R_Bran, HtranOut.R_Total, HtranOut.R_User, HtranOut.R_Post, HtranOut.R_UserPost, HtranOut.R_PostDate, HtranOut.R_PostTime , b.name" +
                " FROM tranout TranOut" +
                " left JOIN htranout HtranOut ON  (TranOut.R_No = HtranOut.R_No)" +
                " left JOIN branfile b ON (HtranOut.R_Bran = b.code)" +
                " where (TranOut.R_Post='Y') and " +
                " (HtranOut.R_Date>='"+Format.dateFmtSql.format(date1.getTime())+"') and (HtranOut.R_Date<='"+Format.dateFmtSql.format(date2.getTime())+"') and " +
                " (HtranOut.R_Bran>='"+pbran1+"') and (HtranOut.R_Bran<='"+pbran2+"') and" +
                " (TranOut.R_PCode='"+pcode+"')" +
                " Order by HtranOut.R_Date";
        
        System.out.println(" loadDetail = "+sql);
        try {
            ResultSet rs = MySQLConnect.con.createStatement().executeQuery(sql);
            while(rs.next()){
                String[] row = new String[tblDetail.getColumnCount()];
                
                try{
                        row[0] = Format.dateFmtShow.format(rs.getDate("r_date"));
                    }catch(Exception ex){
                        row[0] = null;
                    }
                
                row[1] = rs.getString("r_no");
                row[2] = rs.getString("r_stock");
                row[3] = Format.qtyFmt.format(rs.getDouble("r_qty"));
                row[4] = Format.doubleFmt.format(rs.getFloat("r_amount"));
                row[5] = rs.getString("name");
                row[6] = rs.getString("r_userpost");
                row[7] = rs.getString("r_postdate");
                row[8] = rs.getString("r_posttime");
                
                modelDetail.addRow(row);
                
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    private ResultSet getRecordHeaderBran(Calendar date1, Calendar date2, String pcode1 , String pcode2, String pbran1,String pbran2)  {
        String sql = "SELECT TranOut.R_PCode, SUM( TranOut.R_Qty ), SUM( TranOut.R_Amount ), TranOut.r_unit, TranOut.R_No, TranOut.R_Que, TranOut.R_Post, HtranOut.R_No, HtranOut.R_Date,HtranOut.R_Bran, HtranOut.R_Post " +
                    " FROM tranout TranOut left JOIN htranout HtranOut " +
                    " ON  (TranOut.R_No = HtranOut.R_No)" +
                    " WHERE  (TranOut.R_Post = 'Y') and " +
                    " (HtranOut.R_Date>='"+Format.dateFmtSql.format(date1.getTime())+"') and (HtranOut.R_Date<='"+Format.dateFmtSql.format(date2.getTime())+"') and" +
                    " (TranOut.R_PCode>='"+pcode1+"') and (TranOut.R_PCode<='"+pcode2+"') and " +
                    " (HtranOut.R_Bran>='"+pbran1+"') and (HtranOut.R_Bran<='"+pbran2+"')" +
                    " GROUP BY TranOut.R_PCode, HtranOut.R_Bran" +
                    " ORDER BY HtranOut.R_Bran, TranOut.R_PCode";
        try {
            System.out.println("Header := "+sql);    
            return MySQLConnect.con.createStatement().executeQuery(sql);
        } catch (SQLException ex) {
            ex.printStackTrace();
            return null;
        }
    }
    private void showRecordToTableHeaderBran (ResultSet rs){
        if(rs!=null){
            double sumQty = 0;
            BigDecimal sumAmt = new BigDecimal("0");
            try {
                while (rs.next()) {
                    String[] row = new String[tblPage2.getColumnCount()];
                    row[0] = rs.getString("R_Bran");      
                    row[1] = PUtility.SeekBranchName(rs.getString("R_Bran")) ; 
                    row[2] = rs.getString("r_pcode");
                    row[3] = PUtility.SeekProductName(rs.getString("r_pcode"));
                    row[4] = Format.qtyFmt.format(rs.getDouble("SUM( TranOut.R_Qty )"));
                    row[5] = rs.getString("r_unit") ;
                    row[6] = Format.doubleFmt.format(rs.getFloat("SUM( TranOut.R_Amount )"));
                    
                    modelHeaderBran.addRow(row);
                    double qty = rs.getDouble("SUM( TranOut.R_Qty )");
                    sumQty += qty;
                    BigDecimal amt = new BigDecimal(String.valueOf(rs.getFloat("SUM( TranOut.R_Amount )")));
                    sumAmt = sumAmt.add(amt);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,ex);
                ex.printStackTrace();
            }
            
            txtQty1.setText(Format.qtyFmt.format(sumQty));
            txtAmt1.setText(Format.doubleFmt.format(sumAmt.doubleValue()));
            txtHlist1.setText("จำนวน "+tblPage2.getRowCount()+" รายการ");
        }
    }
    
    
    private void escapeEvent(java.awt.event.KeyEvent evt){
        if(evt.getKeyCode() == evt.VK_ESCAPE){
        dispose();
    }
    }
    private void F5Event(java.awt.event.KeyEvent evt){
        if(evt.getKeyCode() == evt.VK_F5){
            cmdProcess();
            tblDetail.requestFocus();
        }
    }
}
