package Main.viewreport;


import Main.browser.Jdi_browse_factory;
import Bean.FactoryBean;
import DBcontrol.MySQLConnect;
import program.PublicVar;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Locale;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import report.SnpReport;
import utilities.NimbusFrame;
import utilities.TableTestFormatRenderer;

public class Jdi_report_recive extends javax.swing.JDialog {
 
    public Jdi_report_recive(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        PublicVar.ReturnString = "" ;
        if (txt2.getText().trim().equals("")) {
            txt2.setText(dateFmtShow.format(Calendar.getInstance().getTime()));
            txt2.selectAll();
        }
        if (txt1.getText().trim().equals("")) {
            txt1.requestFocus();
        }
        PublicVar.ReturnString = "" ;
        setTableHeader();
        setTableDetail();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txt1 = new javax.swing.JFormattedTextField();
        txt2 = new javax.swing.JFormattedTextField();
        cmdDateChoose1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmdDateChoose2 = new javax.swing.JButton();
        cmdProcess = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txt3 = new javax.swing.JTextField();
        txt4 = new javax.swing.JTextField();
        cmd1 = new javax.swing.JButton();
        cmd2 = new javax.swing.JButton();
        chk1 = new javax.swing.JCheckBox();
        cmdPrint = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cmdPrint1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHeader = new javax.swing.JTable();
        txt5 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetail = new javax.swing.JTable();
        txt6 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt7 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("แสดงรายการรับสินค้าจากโรงงาน");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(147, 202, 238));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel2.setText("กำหนดช่วงวันที่");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setFont(new java.awt.Font("Norasi", 0, 14));

        txt1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txt1.setFont(new java.awt.Font("Norasi", 0, 14));
        txt1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt1FocusGained(evt);
            }
        });
        txt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt1KeyPressed(evt);
            }
        });

        txt2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        txt2.setFont(new java.awt.Font("Norasi", 0, 14));
        txt2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt2FocusGained(evt);
            }
        });
        txt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt2KeyPressed(evt);
            }
        });

        cmdDateChoose1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar.png"))); // NOI18N
        cmdDateChoose1.setFocusable(false);
        cmdDateChoose1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateChoose1ActionPerformed(evt);
            }
        });
        cmdDateChoose1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmdDateChoose1KeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel1.setText("ถึง");

        cmdDateChoose2.setFont(new java.awt.Font("Norasi", 0, 14));
        cmdDateChoose2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar.png"))); // NOI18N
        cmdDateChoose2.setFocusable(false);
        cmdDateChoose2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDateChoose2ActionPerformed(evt);
            }
        });
        cmdDateChoose2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmdDateChoose2KeyPressed(evt);
            }
        });

        cmdProcess.setFont(new java.awt.Font("Norasi", 1, 14));
        cmdProcess.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/SandClock.png"))); // NOI18N
        cmdProcess.setText("F5-ประมวณผล");
        cmdProcess.setFocusable(false);
        cmdProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProcessActionPerformed(evt);
            }
        });
        cmdProcess.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmdProcessKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdDateChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmdDateChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdProcess)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cmdDateChoose1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cmdDateChoose2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cmdProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txt3.setFont(new java.awt.Font("Norasi", 0, 14));
        txt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt3ActionPerformed(evt);
            }
        });
        txt3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt3FocusGained(evt);
            }
        });
        txt3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt3KeyReleased(evt);
            }
        });

        txt4.setFont(new java.awt.Font("Norasi", 0, 14));
        txt4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt4FocusGained(evt);
            }
        });
        txt4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt4KeyReleased(evt);
            }
        });

        cmd1.setBackground(new java.awt.Color(228, 223, 217));
        cmd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmd1.setAlignmentY(0.0F);
        cmd1.setFocusable(false);
        cmd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd1ActionPerformed(evt);
            }
        });
        cmd1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmd1FocusGained(evt);
            }
        });
        cmd1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmd1KeyPressed(evt);
            }
        });

        cmd2.setBackground(new java.awt.Color(228, 223, 217));
        cmd2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifying glass.jpg"))); // NOI18N
        cmd2.setAlignmentY(0.0F);
        cmd2.setFocusable(false);
        cmd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd2ActionPerformed(evt);
            }
        });
        cmd2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmd2FocusGained(evt);
            }
        });
        cmd2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmd2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmd1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cmd2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cmd1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cmd2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        chk1.setFont(new java.awt.Font("Norasi", 0, 14));
        chk1.setText("แสดงรายละเอียดในรายงาน");
        chk1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                chk1KeyReleased(evt);
            }
        });

        cmdPrint.setFont(new java.awt.Font("Norasi", 1, 14));
        cmdPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print.gif"))); // NOI18N
        cmdPrint.setText("พิมพ์");
        cmdPrint.setFocusable(false);
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });
        cmdPrint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmdPrintKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel4.setText("เลือกโรงงาน");

        cmdPrint1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        cmdPrint1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.gif"))); // NOI18N
        cmdPrint1.setText("Exit");
        cmdPrint1.setFocusable(false);
        cmdPrint1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrint1ActionPerformed(evt);
            }
        });
        cmdPrint1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmdPrint1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(chk1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmdPrint1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(chk1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdPrint)
                    .addComponent(cmdPrint1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setVerticalAlignment(0);

        tblHeader.setAutoCreateRowSorter(true);
        tblHeader.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tblHeader.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "วันที่ (Date)", "เลขที่เอกสาร", "ชื่อโรงงาน", "โรงงาน", "หมายเหตุ", "รายการ", "เข้าสต็อก", "วันที่ POST", "เวลา POST", "พนักงาน"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHeader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHeaderMouseClicked(evt);
            }
        });
        tblHeader.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblHeaderKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblHeaderKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblHeader);

        txt5.setBackground(new java.awt.Color(175, 251, 209));
        txt5.setEditable(false);
        txt5.setFont(new java.awt.Font("Norasi", 1, 14));
        txt5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt5.setText("จำนวนรวมทั้งหมด 0 บิล");

        tblDetail.setAutoCreateRowSorter(true);
        tblDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tblDetail.setFont(new java.awt.Font("Norasi", 0, 14));
        tblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ลำดับ", "รหัสสินค้า (PLU Code)", "ชื่อสินค้า/รายการ", "คลัง", "จำนวนสั่ง", "จำนวนส่ง", "จำนวนรับ", "หน่วย", "ราคา/หน่วย", "จำนวนเงิน", "วันที่บันทึก", "เวลาบันทึก", "ผู้บันทึก"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblDetailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDetailKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblDetail);

        txt6.setBackground(new java.awt.Color(175, 251, 209));
        txt6.setEditable(false);
        txt6.setFont(new java.awt.Font("Norasi", 1, 14));
        txt6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt6.setText("จำนวน 0 รายการ");
        txt6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt6KeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Norasi", 1, 14));
        jLabel3.setText("รวมจำนวนเงิน");

        txt7.setBackground(new java.awt.Color(175, 251, 209));
        txt7.setEditable(false);
        txt7.setFont(new java.awt.Font("Norasi", 1, 16));
        txt7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt7.setText("0.00");
        txt7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt7KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 996, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(262, 262, 262)
                            .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(131, 131, 131)
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(txt7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 996, Short.MAX_VALUE)))))
                .addGap(8, 8, 8))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txt7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1024)/2, (screenSize.height-768)/2, 1024, 768);
    }// </editor-fold>//GEN-END:initComponents

private void cmd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd1ActionPerformed
    if (searchFacF1Dialog(txt3)) {
       txt4.requestFocus();
    } else {
        txt3.requestFocus();
    }
}//GEN-LAST:event_cmd1ActionPerformed

private void cmd1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmd1FocusGained

}//GEN-LAST:event_cmd1FocusGained

private void cmd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd2ActionPerformed
    if (searchFacF1Dialog2(txt4)) {
       txt1.requestFocus();
    } else {
        txt4.requestFocus();
    }
}//GEN-LAST:event_cmd2ActionPerformed

private void cmd2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmd2FocusGained
// TODO add your handling code here:
}//GEN-LAST:event_cmd2FocusGained

private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
    SnpReport snp = new SnpReport();
    snp.recivePrintReport(txt1.getText().trim(), txt2.getText().trim(),txt3.getText().trim(),txt4.getText().trim(), chk1.isSelected(), true);
    requestFocus();
}//GEN-LAST:event_cmdPrintActionPerformed

private void cmdDateChoose1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateChoose1ActionPerformed
    cmdDateChoose1();
}//GEN-LAST:event_cmdDateChoose1ActionPerformed

private void cmdDateChoose2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDateChoose2ActionPerformed
    cmdDateChoose2();
}//GEN-LAST:event_cmdDateChoose2ActionPerformed

private void txt1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt1KeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_F1){
        cmdDateChoose1();
    }else if(evt.getKeyCode()==KeyEvent.VK_F5){
        cmdProcessActionPerformed(null);
    }else if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        txt2.requestFocus();
    }
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_txt1KeyPressed

private void txt2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt2KeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_F1){
        cmdDateChoose2();
    }else if(evt.getKeyCode()==KeyEvent.VK_F5){
        cmdProcessActionPerformed(null);
    }else  if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        txt3.requestFocus();
    }
    escapeEvent(evt);
}//GEN-LAST:event_txt2KeyPressed

private void txt1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt1FocusGained
    if(txt1.getText().trim().equals("")){
        txt1.setText(dateFmtShow.format(Calendar.getInstance().getTime()));        
    }
    txt1.setText(txt1.getText());
    txt1.selectAll();
}//GEN-LAST:event_txt1FocusGained

private void txt2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt2FocusGained
    if(txt2.getText().trim().equals("")){
        txt2.setText(dateFmtShow.format(Calendar.getInstance().getTime()));
        txt2.selectAll();
    }
    if(txt1.getText().trim().equals("")){
        txt1.requestFocus();
    }
    txt2.setText(txt2.getText());
    txt2.selectAll();
}//GEN-LAST:event_txt2FocusGained

private void cmdProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProcessActionPerformed
    txt6.setText("จำนวน 0 รายการ");
    txt7.setText("0.00");
    cmdProcess();
    tblHeader.requestFocus();
}//GEN-LAST:event_cmdProcessActionPerformed

private void txt3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt3KeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_F1){   
        if (searchFacF1Dialog(txt3)) {
           txt4.requestFocus();
        } else {
            txt3.requestFocus();
        }
    }else if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        txt4.requestFocus();
    }else if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
       escapeEvent(evt);
    }else if(evt.getKeyCode()==KeyEvent.VK_F5){
        cmdProcessActionPerformed(null);
    }
    
}//GEN-LAST:event_txt3KeyPressed

private void txt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt3ActionPerformed
    
}//GEN-LAST:event_txt3ActionPerformed

private void txt3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt3KeyReleased
    
}//GEN-LAST:event_txt3KeyReleased

private void txt3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt3FocusGained
    txt3.setText(txt3.getText());
    txt3.selectAll();
}//GEN-LAST:event_txt3FocusGained

private void txt4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt4FocusGained
    txt4.setText(txt4.getText());
    txt4.selectAll();
}//GEN-LAST:event_txt4FocusGained

private void cmdDateChoose2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmdDateChoose2FocusGained
    if(txt1.getText().trim().equals("")){
        txt1.requestFocus();
    }
}//GEN-LAST:event_cmdDateChoose2FocusGained

private void txt4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt4KeyReleased
    
}//GEN-LAST:event_txt4KeyReleased

private void tblDetailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDetailKeyPressed
    if(evt.getKeyCode() == evt.VK_ENTER){
        cmdPrint.requestFocus();
    }
}//GEN-LAST:event_tblDetailKeyPressed

private void cmdDateChoose1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdDateChoose1KeyPressed
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_cmdDateChoose1KeyPressed

private void cmdDateChoose2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdDateChoose2KeyPressed
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_cmdDateChoose2KeyPressed

private void cmdProcessKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdProcessKeyPressed
    txt6.setText("จำนวน 0 รายการ");
    txt7.setText("0.00");
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_cmdProcessKeyPressed

private void cmd1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmd1KeyPressed
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_cmd1KeyPressed

private void txt4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt4KeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_F1){   
        if (searchFacF1Dialog(txt4)) {
           txt1.requestFocus();
        } else {
            txt4.requestFocus();
        }
    }else if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        txt1.requestFocus();
    }else if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
       escapeEvent(evt);
    }else if(evt.getKeyCode()==KeyEvent.VK_F5){
        cmdProcessActionPerformed(null);
    }
}//GEN-LAST:event_txt4KeyPressed

private void cmd2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmd2KeyPressed
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_cmd2KeyPressed

private void chk1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chk1KeyReleased
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_chk1KeyReleased

private void cmdPrintKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdPrintKeyReleased
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_cmdPrintKeyReleased

private void txt5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt5KeyPressed
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_txt5KeyPressed

private void tblDetailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDetailKeyReleased
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_tblDetailKeyReleased

private void txt6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt6KeyPressed
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_txt6KeyPressed

private void txt7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt7KeyReleased
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_txt7KeyReleased

private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
    escapeEvent(evt);
    F5Event(evt);
}//GEN-LAST:event_formKeyPressed

private void tblHeaderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblHeaderKeyReleased
   if(evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN ||
           evt.getKeyCode()==KeyEvent.VK_ENTER){
        int index = tblHeader.getSelectedRow();
        String text = (String)tblHeader.getValueAt(index, 1);
        loadDetail(text);
    }
    escapeEvent(evt);
    F5Event(evt); 
}//GEN-LAST:event_tblHeaderKeyReleased

private void tblHeaderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblHeaderKeyPressed
    if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        int index = tblHeader.getSelectedRow();
        String text = (String) tblHeader.getValueAt(index, 1);
        PublicVar.ReturnString = text;
        dispose();
    }
}//GEN-LAST:event_tblHeaderKeyPressed

private void tblHeaderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHeaderMouseClicked
     if (evt.getClickCount() == 2) {
        int index = tblHeader.getSelectedRow();
        String text = (String) tblHeader.getValueAt(index, 1);
        PublicVar.ReturnString = text;
        this.dispose();
    } else {
        int index = tblHeader.getSelectedRow();
        String text = (String) tblHeader.getValueAt(index, 1);
        PublicVar.ReturnString = text;
        loadDetail(text);
    }
}//GEN-LAST:event_tblHeaderMouseClicked

private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    PublicVar.ReturnString = "";
}//GEN-LAST:event_formWindowClosing

private void cmdPrint1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrint1ActionPerformed
    PublicVar.ReturnString = "";
    dispose();
}//GEN-LAST:event_cmdPrint1ActionPerformed

private void cmdPrint1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmdPrint1KeyReleased
    // TODO add your handling code here:
}//GEN-LAST:event_cmdPrint1KeyReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Jdi_report_recive dialog = new Jdi_report_recive(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chk1;
    private javax.swing.JButton cmd1;
    private javax.swing.JButton cmd2;
    private javax.swing.JButton cmdDateChoose1;
    private javax.swing.JButton cmdDateChoose2;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdPrint1;
    private javax.swing.JButton cmdProcess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDetail;
    private javax.swing.JTable tblHeader;
    private javax.swing.JFormattedTextField txt1;
    private javax.swing.JFormattedTextField txt2;
    private javax.swing.JTextField txt3;
    private javax.swing.JTextField txt4;
    private javax.swing.JTextField txt5;
    private javax.swing.JTextField txt6;
    private javax.swing.JTextField txt7;
    // End of variables declaration//GEN-END:variables

    SimpleDateFormat dateFmtShow = new SimpleDateFormat("dd/MM/yyyy" ,Locale.ENGLISH);
    SimpleDateFormat dateFmtSql = new SimpleDateFormat("yyyy-MM-dd" ,Locale.ENGLISH);
    SimpleDateFormat timeFmtShow = new SimpleDateFormat("hh:mm:ss" ,Locale.ENGLISH);
    DecimalFormat doubleFmt = new DecimalFormat("##,###,##0.00");
    DecimalFormat intFmt = new DecimalFormat("##,###,##0");
    DecimalFormat qtyFmt = new DecimalFormat("##,###,##0.000");
    
    DefaultTableModel modelHeader;
    DefaultTableModel modelDetail;
    
    private void resetTableModel(DefaultTableModel model){
        int rowCount = model.getRowCount();
        for(int i=0; i < rowCount; i++){
            model.removeRow(0);
        }
    }
    
    private void setTableHeader(){
        
        modelHeader = (DefaultTableModel) tblHeader.getModel();
        tblHeader.setShowGrid(true);
        tblHeader.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblHeader.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblHeader.setRowSelectionAllowed(true);
        tblHeader.setShowGrid(true);
        tblHeader.setBackground(Color.WHITE);
        tblHeader.setGridColor(Color.LIGHT_GRAY);
        JTableHeader header = tblHeader.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblHeader.setFont(new java.awt.Font("Norasi" , java.awt.Font.PLAIN ,14));
        tblHeader.setRowHeight(25);
        
        TableColumn column = null;
        int[] colSize = {90, 100, 160, 50, 260, 60, 60, 90, 75, 70};
        tblHeader.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < colSize.length; i++) {
            column = tblHeader.getColumnModel().getColumn(i);
            column.setPreferredWidth(colSize[i]);
        }
        
        
        TableColumnModel tcm = tblHeader.getColumnModel();
        
        TableTestFormatRenderer r;
        DefaultTableCellRenderer d;
        
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.LEADING);
        tcm.getColumn(1).setCellRenderer(d);
        tcm.getColumn(2).setCellRenderer(d);
        tcm.getColumn(4).setCellRenderer(d);
        tcm.getColumn(9).setCellRenderer(d);
        
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(0).setCellRenderer(d);
        tcm.getColumn(3).setCellRenderer(d);
        tcm.getColumn(6).setCellRenderer(d);
        tcm.getColumn(7).setCellRenderer(d);
        tcm.getColumn(8).setCellRenderer(d);
        
                
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(5).setCellRenderer(d);
        
    }
    
    private void setTableDetail(){
        modelDetail = (DefaultTableModel) tblDetail.getModel();
        tblDetail.setShowGrid(true);
        tblDetail.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblDetail.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblDetail.setRowSelectionAllowed(true);
        tblDetail.setShowGrid(true);
        tblDetail.setBackground(Color.WHITE);
        tblDetail.setGridColor(Color.LIGHT_GRAY);
        JTableHeader header = tblDetail.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblDetail.setFont(new java.awt.Font("Norasi" , java.awt.Font.PLAIN ,14));
        tblDetail.setRowHeight(25);
        
        TableColumn column = null;
        int[] colSize = {50, 100, 250, 50, 80, 80, 80, 80, 80, 80, 80, 80, 70};
        tblDetail.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < colSize.length; i++) {
            column = tblDetail.getColumnModel().getColumn(i);
            column.setPreferredWidth(colSize[i]);
        }
        
        TableColumnModel tcm = tblDetail.getColumnModel();
        
        TableTestFormatRenderer r;
        DefaultTableCellRenderer d;
        
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.LEADING);
        tcm.getColumn(0).setCellRenderer(d);
        tcm.getColumn(1).setCellRenderer(d);
        tcm.getColumn(2).setCellRenderer(d);
        tcm.getColumn(5).setCellRenderer(d);
        tcm.getColumn(6).setCellRenderer(d);
        tcm.getColumn(7).setCellRenderer(d);
        tcm.getColumn(10).setCellRenderer(d);
        
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(3).setCellRenderer(d);
        
        tcm.getColumn(8).setCellRenderer(d);
        tcm.getColumn(9).setCellRenderer(d);
        
                
        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(4).setCellRenderer(d);
        tcm.getColumn(8).setCellRenderer(d);
        tcm.getColumn(9).setCellRenderer(d);
    }
    
    
    ////////////////////////////// CMD /////////////////////////////////////////
    private void cmdDateChoose1(){
        Point point = cmdDateChoose1.getLocationOnScreen();
        utilities.DateChooser.DateChooserDialog dcd = new utilities.DateChooser.DateChooserDialog(null,true,point);
        dcd.setVisible(true);
        txt1.setText(dateFmtShow.format(dcd.getSelectedDate().getTime()));
        txt2.requestFocus();
    }
    private void cmdDateChoose2(){        
        Point point = cmdDateChoose2.getLocationOnScreen();
        utilities.DateChooser.DateChooserDialog dcd = new utilities.DateChooser.DateChooserDialog(null,true,point);
        dcd.setVisible(true);
        txt2.setText(dateFmtShow.format(dcd.getSelectedDate().getTime()));
        txt3.requestFocus();
    }
    private void cmdProcess(){
        resetTableModel(modelHeader);
        resetTableModel(modelDetail);
        Calendar date1 = null;
        Calendar date2 = null;
        String fac1 = "";
        String fac2 = "";
        if (!(txt1.getText().equals("") || txt2.getText().equals(""))) {
            date1 = new GregorianCalendar();
            date2 = new GregorianCalendar();
            try {
                date1.setTime(dateFmtShow.parse(txt1.getText().trim()));
                date2.setTime(dateFmtShow.parse(txt2.getText().trim()));
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
            
            if(date1 == null || date2==null){
                return;
            }
            
            if(date1.compareTo(date2)>0){
                JOptionPane.showMessageDialog(this, "กรุณาระบุวันที่ให้ถูกต้อง");
                return;
            }
        }
        if(!(txt3.getText().trim().equals("") )){
            fac1 = txt3.getText().trim();
        }
        if(!(txt4.getText().trim().equals(""))){
            fac2 = txt4.getText().trim();
        }
        
        showRecordToTableHeader(getRecordHeader(date1, date2, fac1 , fac2));


        if(tblHeader.getRowCount() != 0){
            tblHeader.setRowSelectionInterval(0, 0);
            loadDetail((String)tblHeader.getValueAt(0, 1));
        } else {
            txt6.setText("จำนวน 0 รายการ");
            txt7.setText("0.00");
            JOptionPane.showMessageDialog(this, "ไม่พบข้อมูลตามเงื่อนไขที่ต้องการ...");
            txt1.requestFocus();
        }

        txt5.setText("จำนวนรวมทั้งหมด "+ tblHeader.getRowCount() + " บิล");
    }
    private int loadDetailCount(String r_no){
        int count = 0;
        String sql = "select r_no from recive where r_no='"+r_no+"'";
        try {
            //JOptionPane.showMessageDialog(this, "KKK");
            ResultSet rs = MySQLConnect.con.createStatement().executeQuery(sql);
            while(rs.next()){
                count++;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "SQL: "+ex.getMessage());
        }
        return count;
    }
    private void loadDetail(String text){        
        resetTableModel(modelDetail);
        Double total = 0.0;
        String sql = "SELECT r.*, p.* FROM recive r, product p " +
                "WHERE (r.r_pcode = p.pcode) AND r.r_no = '"+text+"'";
        try {
            //JOptionPane.showMessageDialog(this, "KKK");
            ResultSet rs = MySQLConnect.con.createStatement().executeQuery(sql);
            while(rs.next()){
                String[] row = new String[tblDetail.getColumnCount()];
                row[0] = intFmt.format(rs.getInt("r_que"));
                row[1] = rs.getString("r_pcode");
                row[2] = rs.getString("pdesc");
                row[3] = rs.getString("r_stock");
                row[4] = rs.getString("r_order");
                row[5] = rs.getString("r_send");
                row[6] = qtyFmt.format(rs.getFloat("r_qty"));
                row[7] = rs.getString("r_unit");
                row[8] = doubleFmt.format(rs.getFloat("r_cost"));
                row[9] = doubleFmt.format(rs.getFloat("r_amount"));
                row[10] = dateFmtShow.format(rs.getDate("r_entrydate"));
                row[11] = rs.getString("r_time");
                row[12] = rs.getString("r_user");
                total = total+rs.getDouble("r_amount") ;
                modelDetail.addRow(row);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
        txt6.setText("จำนวน "+tblDetail.getRowCount()+" รายการ");
        txt7.setText(doubleFmt.format(total));
        if(tblDetail.getRowCount()!=0){
            tblDetail.setRowSelectionInterval(0, 0);
        }
    }
    
    private boolean searchFacF1Dialog(JTextField txt){
        Jdi_browse_factory rsd = new Jdi_browse_factory(new NimbusFrame(),true);
        rsd.setLocation(cmd1.getLocationOnScreen());
        rsd.setVisible(true);
        FactoryBean hrb = rsd.getDataRecord();
        if (hrb != null) {
            txt.setText(hrb.getFactorycode());
            return true;
        }else{
            txt.requestFocus();
            return false;
        }
    }

    private boolean searchFacF1Dialog2(JTextField txt){
        Jdi_browse_factory rsd = new Jdi_browse_factory(new NimbusFrame(),true);
        rsd.setLocation(cmd2.getLocationOnScreen());
        rsd.setVisible(true);
        FactoryBean hrb = rsd.getDataRecord();
        if (hrb != null) {
            txt.setText(hrb.getFactorycode());
            return true;
        }else{
            txt.requestFocus();
            return false;
        }
    }
    
    ////////////////////////////////////////////////////////////////////////////
    
    ///////////////////////// Event ////////////////////////////////////////////
    private void txt3Event() {
      
    }
    private void txt4Event() {
       
    }
    ////////////////////////////////////////////////////////////////////////////
  
    private ResultSet getRecordHeader(Calendar date1, Calendar date2, String fac1, String fac2)  {
        String sql = "SELECT h.* , f.* FROM hrecive h, factory f " +
                "WHERE h.r_bran = f.factorycode " +
                "AND (r_date BETWEEN '"+dateFmtSql.format(date1.getTime())+"' " +
                "AND '"+dateFmtSql.format(date2.getTime())+"')";
        if(fac1.equals("") & fac2.equals("")){
            sql = sql;
        }
        else if( (!fac1.equals("")) && fac2.equals("")){
            sql += " AND (r_bran ='"+fac1+"')";
        }else{
            sql += " AND (r_bran between '"+fac1+"' AND '"+fac2+"')";
        }
        
        sql += " ORDER BY r_date,r_no";
        try {
            System.out.println(sql);    
            return MySQLConnect.con.createStatement().executeQuery(sql);
        } catch (SQLException ex) {
            ex.printStackTrace();
            return null;
        }
    }
    private void showRecordToTableHeader (ResultSet rs){
        if(rs!=null){
            try {
                while (rs.next()) {
                    String[] row = new String[tblHeader.getColumnCount()];
                    row[0] = dateFmtShow.format(rs.getDate("r_date"));
                    row[1] = rs.getString("r_no");
                    row[2] = rs.getString("factoryname");
                    row[3] = rs.getString("factorycode");
                    row[4] = rs.getString("r_remark");
                    row[5] = ""+loadDetailCount(rs.getString("r_no"));
                    row[6] = rs.getString("r_post");
                    try{
                        row[7] = dateFmtShow.format(rs.getDate("r_postdate"));
                    }catch(Exception ex){
                        row[7] = null;
                    }
                    row[8] = rs.getString("r_posttime");
                    row[9] = rs.getString("r_userpost");
                    
                    modelHeader.addRow(row);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }
    
    private void escapeEvent(java.awt.event.KeyEvent evt){
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            PublicVar.ReturnString = "";
            dispose();
        }
    }
    private void F5Event(java.awt.event.KeyEvent evt){
//        if(evt.getKeyCode() == evt.VK_F5){
//            cmdProcess();
//            tblHeader.requestFocus();
//        }
    }
}
