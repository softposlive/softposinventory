package Main.browser;

import Bean.Stockfile;
import DBcontrol.Db_stockfile;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import utilities.ThaiUtil;

public class Jdi_browse_stockfile extends javax.swing.JDialog {

    /** Creates new form FactoryShowDialog */
    public Jdi_browse_stockfile(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTableShow();
        
        loadDataToGrid();
        if(tblShow.getRowCount()!=0)
            tblShow.setRowSelectionInterval(0, 0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblShow = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("แสดงรายการสต็อกสินค้า");

        tblShow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัส", "ชื่อโรงงาน"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblShowMouseClicked(evt);
            }
        });
        tblShow.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblShowKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblShow);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-325)/2, (screenSize.height-417)/2, 325, 417);
    }// </editor-fold>//GEN-END:initComponents

private void tblShowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblShowMouseClicked
    if(evt.getClickCount()==2){
        int index = tblShow.getSelectedRow();
        Db_stockfile hr = null;
            try {
                hr = new Db_stockfile();
                dataRecord = hr.getRecordAt((String)tblShow.getValueAt(index, 0));
                //JOptionPane.showMessageDialog(this, dataRecord.getFactorycode() +" , "+dataRecord.getFactoryname());
                dispose();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
    }
}//GEN-LAST:event_tblShowMouseClicked

private void tblShowKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblShowKeyPressed
    if(evt.getKeyCode() == evt.VK_ENTER){
        int index = tblShow.getSelectedRow();
        Db_stockfile hr = null;
            try {
                hr = new Db_stockfile();
                dataRecord = hr.getRecordAt((String)tblShow.getValueAt(index, 0));
                //JOptionPane.showMessageDialog(this, dataRecord.getStkcode()+" , "+dataRecord.getStkname());
                dispose();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
    }
    if(evt.getKeyCode() == evt.VK_ESCAPE){
        dispose();
    }
}//GEN-LAST:event_tblShowKeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Jdi_browse_stockfile dialog = new Jdi_browse_stockfile(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblShow;
    // End of variables declaration//GEN-END:variables
 private DefaultTableModel model;
 private Stockfile dataRecord;

    public Stockfile getDataRecord() {
        return dataRecord;
    }
 
    private void setTableShow() {
     
        //Setting column size
        model = (DefaultTableModel) tblShow.getModel();
        tblShow.setShowGrid(true);
        tblShow.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblShow.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblShow.setRowSelectionAllowed(true);
        tblShow.setShowGrid(true);
        tblShow.setGridColor(Color.black);
        
        JTableHeader header = tblShow.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblShow.setFont(new java.awt.Font("Norasi" , java.awt.Font.PLAIN ,14));
        tblShow.setRowHeight(25);
        
        //Setting column size
        TableColumn column = null;
        int[] colSize = {70, 240};
        //tblShow.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < colSize.length; i++) {
            column = tblShow.getColumnModel().getColumn(i);
            column.setPreferredWidth(colSize[i]);
        }
        DecimalFormat DoubleFmt = new DecimalFormat("##,###,##0.00");
        DecimalFormat IntegerFmt = new DecimalFormat("##,###,##0");
        DecimalFormat PersentFmt = new DecimalFormat("#,##0.00%");
        
        TableColumnModel tcm = tblShow.getColumnModel();
        /*
        TableTestFormatRenderer r = new TableTestFormatRenderer(IntegerFmt);

        r.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(3).setCellRenderer(r);

        r = new TableTestFormatRenderer(IntegerFmt);
        r.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(4).setCellRenderer(r);

        r = new TableTestFormatRenderer(DoubleFmt);
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(5).setCellRenderer(r);
        */
        
    }
    
    private void loadDataToGrid() {
        
        Db_stockfile hr = null;
        String sql = null;
        
        try {
            hr = new Db_stockfile();
            sql = "SELECT * FROM stockfile";
            ResultSet rs = hr.getStmt().executeQuery(sql);
            
            if (rs != null) {
                
                Object[] row = new Object[2];
                while (rs.next()){    
                                     
                    row[0] = rs.getString("stkcode");  
                    row[1] = ThaiUtil.ASCII2Unicode(rs.getString("stkname"));
                    
                    model.addRow(row);
                }
            } else{}
            

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
    }
}
